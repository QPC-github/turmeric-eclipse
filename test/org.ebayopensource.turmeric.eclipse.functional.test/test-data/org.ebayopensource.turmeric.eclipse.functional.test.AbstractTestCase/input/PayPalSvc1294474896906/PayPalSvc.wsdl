<?xml version="1.0" encoding="UTF-8"?>
<definitions targetNamespace="urn:ebay:api:PayPalAPI" ns:version="65.1" xmlns:cc="urn:ebay:apis:CoreComponentTypes" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="urn:ebay:api:PayPalAPI" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ed="urn:ebay:apis:EnhancedDataTypes" xmlns:ebl="urn:ebay:apis:eBLBaseComponents">
  <types>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:ebay:api:PayPalAPI" xmlns="http://www.w3.org/2001/XMLSchema">
			<import namespace="urn:ebay:apis:CoreComponentTypes" schemaLocation="CoreComponentTypes.xsd"/>
			<import namespace="urn:ebay:apis:eBLBaseComponents" schemaLocation="eBLBaseComponents.xsd"/>
			<import namespace="urn:ebay:apis:EnhancedDataTypes" schemaLocation="EnhancedDataTypes.xsd"/>
			<!-- Custom Security header element-->
			<xs:element name="RequesterCredentials" type="ebl:CustomSecurityHeaderType"/>
			<!-- API Request/Responses -->
			<!-- Complex data types that BMCreateButtonRequestType, BMUpdateButtonRequestType, and BMGetButtonDetailsResponseType reference. -->
			<!-- We *should* define these types in eBLBaseComponents.xsd (and actually we used to), but the PayPal Java SDK test SOAP client -->
			<!-- was (for some reason) unable to serialize or deserialize the elements correctly.  The problem may have something to do with -->
			<!-- namespace resolution issues.  For now, we'll leave these definitions here.  When we figure out a solution to the problem,   -->
			<!-- we'll move the definitions back to eBLBaseComponents.xsd.                                                                   -->
			<xs:complexType name="InstallmentDetailsType">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="BillingPeriod" type="ebl:BillingPeriodType">
						<xs:annotation>
							<xs:documentation>
							Installment Period.
								<br/>
									<b>Optional</b>
								<br/>
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="BillingFrequency" type="xs:int">
						<xs:annotation>
							<xs:documentation>
							Installment Frequency.
								<br/>
									<b>Optional</b>     
								<br/>
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="TotalBillingCycles" type="xs:int">
						<xs:annotation>
							<xs:documentation>
							Installment Cycles.
								<br/>
									<b>Optional</b>     
								<br/>
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="Amount" type="xs:string">
						<xs:annotation>
							<xs:documentation>
							Installment Amount.
								<br/>
									<b>Optional</b>     
								<br/>
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="ShippingAmount" type="xs:string">
						<xs:annotation>
							<xs:documentation>
							Installment Amount.
								<br/>
									<b>Optional</b>     
								<br/>
							</xs:documentation>
						</xs:annotation>
					</xs:element>	
					<xs:element maxOccurs="1" minOccurs="0" name="TaxAmount" type="xs:string">
						<xs:annotation>
							<xs:documentation>
							Installment Amount.
								<br/>
									<b>Optional</b>     
								<br/>
							</xs:documentation>
						</xs:annotation>
					</xs:element>								
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="OptionSelectionDetailsType">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="OptionSelection" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								Option Selection.
								<br/>
								<b>Required</b>
								<br/>
								Character length and limitations: 12 single-byte alphanumeric characters
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="Price" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								Option Price.
								<br/>
								<b>Optional</b>     
								<br/>
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="OptionType" type="ebl:OptionTypeListType">
						<xs:annotation>
							<xs:documentation>
								Option Type
								<br/>
								<b>Optional</b>
								<br/>
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="10" minOccurs="0" name="PaymentPeriod" type="ns:InstallmentDetailsType">
					</xs:element>						
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="OptionDetailsType">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="OptionName" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								Option Name.
								<br/>
								<b>Optional</b>
								<br/>
								</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="100" minOccurs="0" name="OptionSelectionDetails" type="ns:OptionSelectionDetailsType">
					</xs:element>
				</xs:sequence>
			</xs:complexType>

			<!-- API Request/Responses -->
                        <xs:element name="BMCreateButtonRequest" type="ns:BMCreateButtonRequestType"/>
                        <xs:element name="BMCreateButtonResponse" type="ns:BMCreateButtonResponseType"/>
                        <xs:element name="BMCreateButtonReq">
                                <xs:complexType>
                                        <xs:sequence>
                                                <xs:element ref="ns:BMCreateButtonRequest"/>
                                        </xs:sequence>
                                </xs:complexType>
                        </xs:element>
                        <xs:complexType name="BMCreateButtonRequestType">
                                <xs:complexContent>
                                        <xs:extension base="ebl:AbstractRequestType">
                                                <xs:sequence>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonType" type="ebl:ButtonTypeType">
                                                                <annotation>
                                                                        <documentation>
										Type of Button to create.
										<br/>
                                                                                <br/>
                                                                                <b>Required</b>
                                                                                <br/>
                                                                                <br/>
						Must be one of the following: BUYNOW, CART, GIFTCERTIFICATE. SUBSCRIBE, PAYMENTPLAN, AUTOBILLING, DONATE, VIEWCART or UNSUBSCRIBE
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonCode" type="ebl:ButtonCodeType">
                                                                <annotation>
                                                                        <documentation>
										button code.
										<br/>
                                                                                <br/>
                                                                                <b>optional</b>
                                                                                <br/>
                                                                                <br/>
						Must be one of the following: hosted, encrypted or cleartext
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonSubType" type="ebl:ButtonSubTypeType">
                                                                <annotation>
                                                                        <documentation>
										Button sub type.
										<br/>
                                                                                <br/>
                                                                                <b>optional for button types buynow and cart only</b>
                                                                                <br/>
                                                                                <br/>
						Must Be either PRODUCTS or SERVICES
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1000" minOccurs="0" name="ButtonVar" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Button Variable information
										<br/>
                                                                                <br/>
                                                                                <b>At least one required recurring</b>
                                                                                <br/>
                                                                                <br/>
						Character length and limitations: 63 single-byte alphanumeric characters
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="5" minOccurs="0" name="OptionDetails" type="ns:OptionDetailsType">
                                                        </xs:element>
                                                        <xs:element maxOccurs="2" minOccurs="0" name="TextBox" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Details of each option for the button.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonImage" type="ebl:ButtonImageType">
                                                                <annotation>
                                                                        <documentation>
										Button image to use.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
                                                                                <br/>
						Must be one of: REG, SML, or CC
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonImageURL" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Button URL for custom button image.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
                                                                                <br/>
						Character length and limitations: 127 single-byte alphanumeric characters
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="BuyNowText" type="ebl:BuyNowTextType">
                                                                <annotation>
                                                                        <documentation>
										Text to use on Buy Now Button.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
                                                                                <br/>
						Must be either BUYNOW or PAYNOW
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="SubscribeText" type="ebl:SubscribeTextType">
                                                                <annotation>
                                                                        <documentation>
										Text to use on Subscribe button.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
                                                                                <br/>
						Must be either BUYNOW or SUBSCRIBE
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonCountry" type="ebl:CountryCodeType">
                                                                <annotation>
                                                                        <documentation>
										Button Country.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
                                                                                <br/>
						Must be valid ISO country code
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonLanguage" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Button language code.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
                                                                                <br/>
						Character length and limitations: 3 single-byte alphanumeric characters
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                </xs:sequence>
                                        </xs:extension>
                                </xs:complexContent>
                        </xs:complexType>
                        <xs:complexType name="BMCreateButtonResponseType">
                                <xs:complexContent>
                                        <xs:extension base="ebl:AbstractResponseType">
                                                <xs:sequence>
                                                                <xs:element maxOccurs="1" minOccurs="1" name="Website" type="xs:string">
                                                                </xs:element>
                                                                <xs:element maxOccurs="1" minOccurs="0" name="Email" type="xs:string">
                                                                </xs:element>
                                                                <xs:element maxOccurs="1" minOccurs="0" name="Mobile" type="xs:string">
                                                                </xs:element>
                                                                <xs:element maxOccurs="1" minOccurs="0" name="HostedButtonID" type="xs:string">
                                                                </xs:element>
                                                </xs:sequence>
                                        </xs:extension>
                                </xs:complexContent>
                        </xs:complexType>
                        <xs:element name="BMUpdateButtonRequest" type="ns:BMUpdateButtonRequestType"/>
                        <xs:element name="BMUpdateButtonResponse" type="ns:BMUpdateButtonResponseType"/>
                        <xs:element name="BMUpdateButtonReq">
                                <xs:complexType>
                                        <xs:sequence>
                                                <xs:element ref="ns:BMUpdateButtonRequest"/>
                                        </xs:sequence>
                                </xs:complexType>
                        </xs:element>
                        <xs:complexType name="BMUpdateButtonRequestType">
                                <xs:complexContent>
                                        <xs:extension base="ebl:AbstractRequestType">
                                                <xs:sequence>
                                                        <xs:element maxOccurs="1" minOccurs="1" name="HostedButtonID" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Hosted Button id of the button to update.
										<br/>
                                                                                <br/>
                                                                                <b>Required</b>
                                                                                <br/>
                                                                                <br/>
					Character length and limitations: 10 single-byte numeric characters
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonType" type="ebl:ButtonTypeType">
                                                                <annotation>
                                                                        <documentation>
										Type of Button to create.
										<br/>
                                                                                <br/>
                                                                                <b>Required</b>
                                                                                <br/>
                                                                                <br/>
						Must be one of the following: BUYNOW, CART, GIFTCERTIFICATE. SUBSCRIBE, PAYMENTPLAN, AUTOBILLING, DONATE, VIEWCART or UNSUBSCRIBE
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonCode" type="ebl:ButtonCodeType">
                                                                <annotation>
                                                                        <documentation>
										button code.
										<br/>
                                                                                <br/>
                                                                                <b>optional</b>
                                                                                <br/>
                                                                                <br/>
						Must be one of the following: hosted, encrypted or cleartext
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonSubType" type="ebl:ButtonSubTypeType">
                                                                <annotation>
                                                                        <documentation>
										Button sub type.
										<br/>
                                                                                <br/>
                                                                                <b>optional for button types buynow and cart only</b>
                                                                                <br/>
                                                                                <br/>
						Must Be either PRODUCTS or SERVICES
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1000" minOccurs="0" name="ButtonVar" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Button Variable information
										<br/>
                                                                                <br/>
                                                                                <b>At least one required recurring</b>
                                                                                <br/>
                                                                                <br/>
						Character length and limitations: 63 single-byte alphanumeric characters
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="5" minOccurs="0" name="OptionDetails" type="ns:OptionDetailsType">
                                                        </xs:element>
                                                        <xs:element maxOccurs="2" minOccurs="0" name="TextBox" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Details of each option for the button.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonImage" type="ebl:ButtonImageType">
                                                                <annotation>
                                                                        <documentation>
										Button image to use.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
                                                                                <br/>
						Must be one of: REG, SML, or CC
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonImageURL" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Button URL for custom button image.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
                                                                                <br/>
						Character length and limitations: 127 single-byte alphanumeric characters
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="BuyNowText" type="ebl:BuyNowTextType">
                                                                <annotation>
                                                                        <documentation>
										Text to use on Buy Now Button.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
                                                                                <br/>
						Must be either BUYNOW or PAYNOW
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="SubscribeText" type="ebl:SubscribeTextType">
                                                                <annotation>
                                                                        <documentation>
										Text to use on Subscribe button.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
                                                                                <br/>
						Must be either BUYNOW or SUBSCRIBE
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonCountry" type="ebl:CountryCodeType">
                                                                <annotation>
                                                                        <documentation>
										Button Country.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
                                                                                <br/>
						Must be valid ISO country code
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonLanguage" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Button language code.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
                                                                                <br/>
						Character length and limitations: 2 single-byte alphanumeric characters
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                </xs:sequence>
                                        </xs:extension>
                                </xs:complexContent>
                        </xs:complexType>
                        <xs:complexType name="BMUpdateButtonResponseType">
                                <xs:complexContent>
                                        <xs:extension base="ebl:AbstractResponseType">
                                                <xs:sequence>
                                                                <xs:element maxOccurs="1" minOccurs="1" name="Website" type="xs:string">
                                                                </xs:element>
                                                                <xs:element maxOccurs="1" minOccurs="0" name="Email" type="xs:string">
                                                                </xs:element>
                                                                <xs:element maxOccurs="1" minOccurs="0" name="Mobile" type="xs:string">
                                                                </xs:element>
                                                                <xs:element maxOccurs="1" minOccurs="0" name="HostedButtonID" type="xs:string">
                                                                </xs:element>
                                                </xs:sequence>
                                        </xs:extension>
                                </xs:complexContent>
                        </xs:complexType>
			<xs:element name="BMManageButtonStatusRequest" type="ns:BMManageButtonStatusRequestType"/>
			<xs:element name="BMManageButtonStatusResponse" type="ns:BMManageButtonStatusResponseType"/>
			<xs:element name="BMManageButtonStatusReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:BMManageButtonStatusRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="BMManageButtonStatusRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="HostedButtonID" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Button ID of Hosted button.
										<br/>
                                                                                <br/>
                                                                                <b>Required</b>
                                                                                <br/>
                                                                                <br/>
				Character length and limitations: 10 single-byte numeric characters
									</documentation>
                                                                </annotation>
							</xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonStatus" type="ebl:ButtonStatusType">
                                                                <annotation>
                                                                        <documentation>
										Requested Status change for hosted button.
										<br/>
                                                                                <br/>
                                                                                <b>Required</b>
                                                                                <br/>
                                                                                <br/>
				Character length and limitations: 1 single-byte alphanumeric characters
									</documentation>
                                                                </annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="BMManageButtonStatusResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="BMGetButtonDetailsRequest" type="ns:BMGetButtonDetailsRequestType"/>
			<xs:element name="BMGetButtonDetailsResponse" type="ns:BMGetButtonDetailsResponseType"/>
			<xs:element name="BMGetButtonDetailsReq">
				<xs:complexType>
					<xs:sequence>
      			<xs:element ref="ns:BMGetButtonDetailsRequest"/>
        	</xs:sequence>
        </xs:complexType>
     	</xs:element>

                        <xs:complexType name="BMGetButtonDetailsRequestType">
                                <xs:complexContent>
                                        <xs:extension base="ebl:AbstractRequestType">
                                                <xs:sequence>
                                                        <xs:element maxOccurs="1" minOccurs="1" name="HostedButtonID" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Button ID of button to return.
										<br/>
                                                                                <br/>
                                                                                <b>Required</b>
                                                                                <br/>
                                                                                <br/>
				Character length and limitations: 10 single-byte numeric characters
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                </xs:sequence>
                                        </xs:extension>
                                </xs:complexContent>
                        </xs:complexType>
                        <xs:complexType name="BMGetButtonDetailsResponseType">
                                <xs:complexContent>
                                        <xs:extension base="ebl:AbstractResponseType">
                                                <xs:sequence>
                                                                <xs:element maxOccurs="1" minOccurs="0" name="Website" type="xs:string">
                                                                </xs:element>
                                                                <xs:element maxOccurs="1" minOccurs="0" name="Email" type="xs:string">
                                                                </xs:element>
                                                                <xs:element maxOccurs="1" minOccurs="0" name="Mobile" type="xs:string">
                                                                </xs:element>
                                                                <xs:element maxOccurs="1" minOccurs="0" name="HostedButtonID" type="xs:string">
                                                                </xs:element>
																																<xs:element maxOccurs="1" minOccurs="0" name="ButtonType" type="ebl:ButtonTypeType">
                                                                <annotation>
                                                                        <documentation>
                                                                                Type of button.
                                                                                <br/>
                                                                                <br/>
                                                                                One of the following: BUYNOW, CART, GIFTCERTIFICATE. SUBSCRIBE, PAYMENTPLAN, AUTOBILLING, DONATE, VIEWCART or UNSUBSCRIBE
                                                                        </documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonCode" type="ebl:ButtonCodeType">
                                                                <annotation>
                                                                        <documentation>
                                                                                Type of button code.
                                                                                <br/>
                                                                                <br/>
                                                                                One of the following: hosted, encrypted or cleartext
                                                                        </documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonSubType" type="ebl:ButtonSubTypeType">
                                                                <annotation>
                                                                        <documentation>
                                                                                Button sub type.
                                                                                <br/>
                                                                                <br/>
                                                                                <b>optional for button types buynow and cart only</b>
                                                                                <br/>
                                                                                <br/>
                                                                                Either PRODUCTS or SERVICES
                                                                        </documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1000" minOccurs="0" name="ButtonVar" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
                                                                                Button Variable information
                                                                                <br/>
                                                                                <br/>
                                                                                Character length and limitations: 63 single-byte alphanumeric characters
                                                                        </documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="5" minOccurs="0" name="OptionDetails" type="ns:OptionDetailsType">
                                                        </xs:element>
                                                        <xs:element maxOccurs="2" minOccurs="0" name="TextBox" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
                                                                                Text field
                                                                                <br/>
                                                                                <br/>
                                                                        </documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonImage" type="ebl:ButtonImageType">
                                                                <annotation>
                                                                        <documentation>
                                                                                Button image to use.
                                                                                <br/>
                                                                                <br/>
                                                                                One of: REG, SML, or CC
                                                                        </documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonImageURL" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
                                                                                Button URL for custom button image.
                                                                                <br/>
                                                                                <br/>
                                                                        </documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="BuyNowText" type="ebl:BuyNowTextType">
                                                                <annotation>
                                                                        <documentation>
                                                                                Text to use on Buy Now Button.
                                                                                <br/>
                                                                                <br/>
                                                                                Either BUYNOW or PAYNOW
                                                                        </documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="SubscribeText" type="ebl:SubscribeTextType">
                                                                <annotation>
                                                                        <documentation>
                                                                                Text to use on Subscribe button.
                                                                                <br/>
                                                                                <br/>
                                                                                Must be either BUYNOW or SUBSCRIBE
                                                                        </documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonCountry" type="ebl:CountryCodeType">
                                                                <annotation>
                                                                        <documentation>
                                                                                Button Country.
                                                                                <br/>
                                                                                <br/>
                                                                                Valid ISO country code or 'International'
                                                                        </documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonLanguage" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
                                                                                Button language code.
                                                                                <br/>
                                                                                <br/>
                                                                                Character length and limitations: 3 single-byte alphanumeric characters
                                                                        </documentation>
                                                                </annotation>
                                                        </xs:element>
                                                </xs:sequence>
                                        </xs:extension>
                                </xs:complexContent>
                        </xs:complexType>

		<xs:element name="BMSetInventoryRequest" type="ns:BMSetInventoryRequestType"/>
			<xs:element name="BMSetInventoryResponse" type="ns:BMSetInventoryResponseType"/>
			<xs:element name="BMSetInventoryReq">
				<xs:complexType>
  				<xs:sequence>
    				<xs:element ref="ns:BMSetInventoryRequest"/>
      		</xs:sequence>
      	</xs:complexType>
      </xs:element>

                        <xs:complexType name="BMSetInventoryRequestType">
                                <xs:complexContent>
                                        <xs:extension base="ebl:AbstractRequestType">
                                                <xs:sequence>
                                                        <xs:element maxOccurs="1" minOccurs="1" name="HostedButtonID" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Hosted Button ID of button you wish to change.
										<br/>
                                                                                <br/>
                                                                                <b>Required</b>
                                                                                <br/>
                                                                                <br/>
				Character length and limitations: 10 single-byte numeric characters
									</documentation>
                                                                </annotation>
																												</xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="1" name="TrackInv" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Is Inventory tracked.
										<br/>
                                                                                <br/>
                                                                                <b>Required</b>
                                                                                <br/>
                                                                                <br/>
				0 or 1
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="1" name="TrackPnl" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Is PNL Tracked.
										<br/>
                                                                                <br/>
                                                                                <b>Required</b>
                                                                                <br/>
                                                                                <br/>
				0 or 1
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" ref="ebl:ItemTrackingDetails">
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="OptionIndex" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Option Index.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
                                                                                <br/>
				Character length and limitations: 1 single-byte alphanumeric characters
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="10" minOccurs="0" ref="ebl:OptionTrackingDetails">
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="SoldoutURL" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										URL of page to display when an item is soldout.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
                                                                                <br/>
				Character length and limitations: 127 single-byte alphanumeric characters
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ReuseDigitalDownloadKeys" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Whether to use the same digital download key repeatedly.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="AppendDigitalDownloadKeys" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Whether to append these keys to the list or not (replace).
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                        <xs:element maxOccurs="1000" minOccurs="0" name="DigitalDownloadKeys" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Zero or more digital download keys to distribute to customers after transaction is completed.
										<br/>
                                                                                <br/>
                                                                                <b>Optional</b>
                                                                                <br/>
                                                                                <br/>
				Character length and limitations: 1000 single-byte alphanumeric characters
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                </xs:sequence>
                                        </xs:extension>
                                </xs:complexContent>
                        </xs:complexType>
                        <xs:complexType name="BMSetInventoryResponseType">
                                <xs:complexContent>
                                        <xs:extension base="ebl:AbstractResponseType">
                                                <xs:sequence>
                                                                <xs:element name="TransactionID" type="xs:string">
                                                                </xs:element>
                                                </xs:sequence>
                                        </xs:extension>
                                </xs:complexContent>
                        </xs:complexType>
                        <xs:element name="BMGetInventoryRequest" type="ns:BMGetInventoryRequestType"/>
                        <xs:element name="BMGetInventoryResponse" type="ns:BMGetInventoryResponseType"/>
                        <xs:element name="BMGetInventoryReq">
        									<xs:complexType>
          										<xs:sequence>
            											<xs:element ref="ns:BMGetInventoryRequest"/>
          										</xs:sequence>
        									</xs:complexType>
     										 </xs:element>
																<xs:complexType name="BMGetInventoryRequestType">
                                <xs:complexContent>
                                        <xs:extension base="ebl:AbstractRequestType">
                                                <xs:sequence>
                                                        <xs:element maxOccurs="1" minOccurs="1" name="HostedButtonID" type="xs:string">
                                                                <annotation>
                                                                        <documentation>
										Hosted Button ID of the button to return inventory for.
										<br/>
                                                                                <br/>
                                                                                <b>Required</b>
                                                                                <br/>
                                                                                <br/>
				Character length and limitations: 10 single-byte numeric characters
									</documentation>
                                                                </annotation>
                                                        </xs:element>
                                                </xs:sequence>
                                        </xs:extension>
                                </xs:complexContent>
                        </xs:complexType>
                        <xs:complexType name="BMGetInventoryResponseType">
                                <xs:complexContent>
                                        <xs:extension base="ebl:AbstractResponseType">
                                                <xs:sequence>
                                                        <xs:element maxOccurs="1" minOccurs="1" name="HostedButtonID" type="xs:string">
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="1" name="TrackInv" type="xs:string">
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="1" name="TrackPnl" type="xs:string">
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" ref="ebl:ItemTrackingDetails">
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="OptionIndex" type="xs:string">
                                                        </xs:element>
																												<xs:element maxOccurs="1" minOccurs="0" name="OptionName" type="xs:string">
                                                        </xs:element>
                                                        <xs:element maxOccurs="10" minOccurs="0" ref="ebl:OptionTrackingDetails">
                                                        </xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="SoldoutURL" type="xs:string">
                                                        </xs:element>
                                                        <xs:element maxOccurs="1000" minOccurs="0" name="DigitalDownloadKeys" type="xs:string">
                                                        </xs:element>
                                                </xs:sequence>
                                        </xs:extension>
                                </xs:complexContent>
                        </xs:complexType>
                        <xs:element name="BMButtonSearchRequest" type="ns:BMButtonSearchRequestType"/>
                        <xs:element name="BMButtonSearchResponse" type="ns:BMButtonSearchResponseType"/>
                        <xs:element name="BMButtonSearchReq">
        									<xs:complexType>
          										<xs:sequence>
            											<xs:element ref="ns:BMButtonSearchRequest"/>
          										</xs:sequence>
        									</xs:complexType>
     										 </xs:element>

                        <xs:complexType name="BMButtonSearchRequestType">
                                <xs:complexContent>
                                        <xs:extension base="ebl:AbstractRequestType">
                                                <xs:sequence>
							<xs:element maxOccurs="1" minOccurs="0" name="StartDate" type="xs:dateTime">
								<annotation>
									<documentation>
										The earliest transaction date at which to start the search. No wildcards are allowed. 
										<br/><br/>
										<b>Required</b>
									</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="EndDate" type="xs:dateTime">
								<annotation>
									<documentation>
										The latest transaction date to be included in the search 
										<br/><br/>
										Optional
									</documentation>
								</annotation>
							</xs:element>
                                                </xs:sequence>
                                        </xs:extension>
                                </xs:complexContent>
                        </xs:complexType>
                        <xs:complexType name="BMButtonSearchResponseType">
                                <xs:complexContent>
                                        <xs:extension base="ebl:AbstractResponseType">
                                                <xs:sequence>
                                                    <xs:element maxOccurs="100" minOccurs="0" ref="ebl:ButtonSearchResult"/>
                                                </xs:sequence>
                                        </xs:extension>
                                </xs:complexContent>
                        </xs:complexType>
			<xs:element name="RefundTransactionRequest" type="ns:RefundTransactionRequestType"/>
			<xs:element name="RefundTransactionResponse" type="ns:RefundTransactionResponseType"/>
			<xs:element name="RefundTransactionReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:RefundTransactionRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="RefundTransactionRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element name="TransactionID" type="ebl:TransactionId">
								<annotation>
									<documentation>Unique identifier of the  transaction you are refunding.
<br/>
										<br/>
										<b>Required</b>
										<br/>
										<br/>
Character length and limitations: 17 single-byte alphanumeric characters 
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="InvoiceID" type="xs:string">
								<annotation>
									<documentation>Invoice number corresponding to transaction details for tracking the refund of a payment. This parameter is passed by the merchant or recipient while refunding the transaction. This parameter does not affect the business logic, it is persisted in the DB for transaction reference
										<br/>
										<b>Optional</b>
									</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="RefundType" type="ebl:RefundType">
								<annotation>
									<documentation>Type of refund you are making
<br/>
										<br/>
										<b>Required</b>
									</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="Amount" type="cc:BasicAmountType">
								<annotation>
									<documentation>Refund amount. 
<br/>
										<br/>
Amount is <b>required</b>  if RefundType is Partial.
<br/>
										<br/>
NOTE: If RefundType is Full, do not set Amount.
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="Memo" type="xs:string">
								<annotation>
									<documentation>Custom memo about the refund. 
<br/>
										<br/>
Optional
<br/>
										<br/>
Character length and limitations: 255 single-byte alphanumeric characters
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="RetryUntil" type="xs:dateTime">
								<annotation>
									<documentation>The maximum time till which refund must be tried.
									<br/><br/>
									Optional
									</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="RefundSource" type="ebl:RefundSourceCodeType">
								<annotation>
									<documentation>The type of funding source for refund.
									<br/><br/>
									Optional
									</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="RefundTransactionResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<sequence>
							<element maxOccurs="1" minOccurs="0" name="RefundTransactionID" nillable="true" type="ebl:TransactionId">
								<annotation>
									<documentation>Unique transaction ID of the refund. 
<br/>
										<br/>
Character length and limitations:17 single-byte characters
</documentation>
								</annotation>
							</element>

							<element maxOccurs="1" minOccurs="0" name="NetRefundAmount" type="cc:BasicAmountType">
								<annotation>
									<documentation>Amount subtracted from PayPal balance of original recipient of payment to make this refund 
</documentation>
								</annotation>
							</element>
							<element maxOccurs="1" minOccurs="0" name="FeeRefundAmount" type="cc:BasicAmountType">
								<annotation>
									<documentation>Transaction fee refunded to original recipient of payment 
</documentation>
								</annotation>
							</element>
							<element maxOccurs="1" minOccurs="0" name="GrossRefundAmount" type="cc:BasicAmountType">
								<annotation>
									<documentation>Amount of money refunded to original payer </documentation>
								</annotation>
							</element>
							<element maxOccurs="1" minOccurs="0" name="TotalRefundedAmount" type="cc:BasicAmountType">
								<annotation>
									<documentation>Total of all previous refunds</documentation>
								</annotation>
							</element>
						</sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="InitiateRecoupRequest" type="ns:InitiateRecoupRequestType"/>
			<xs:element name="InitiateRecoupResponse" type="ns:InitiateRecoupResponseType"/>
			<xs:element name="InitiateRecoupReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:InitiateRecoupRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="InitiateRecoupRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ed:EnhancedInitiateRecoupRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="InitiateRecoupResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="CompleteRecoupRequest" type="ns:CompleteRecoupRequestType"/>
			<xs:element name="CompleteRecoupResponse" type="ns:CompleteRecoupResponseType"/>
			<xs:element name="CompleteRecoupReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:CompleteRecoupRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="CompleteRecoupRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ed:EnhancedCompleteRecoupRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="CompleteRecoupResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ed:EnhancedCompleteRecoupResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="CancelRecoupRequest" type="ns:CancelRecoupRequestType"/>
			<xs:element name="CancelRecoupResponse" type="ns:CancelRecoupResponseType"/>
			<xs:element name="CancelRecoupReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:CancelRecoupRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="CancelRecoupRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ed:EnhancedCancelRecoupRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="CancelRecoupResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="GetTransactionDetailsRequest" type="ns:GetTransactionDetailsRequestType"/>
			<xs:element name="GetTransactionDetailsResponse" type="ns:GetTransactionDetailsResponseType"/>
			<xs:element name="GetTransactionDetailsReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:GetTransactionDetailsRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="GetTransactionDetailsRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element name="TransactionID" type="ebl:TransactionId">
								<annotation><documentation>Unique identifier of a transaction. 
<br/><br/>
<b>Required</b>
<br/><br/>
The details for some kinds of transactions cannot be retrieved with GetTransactionDetailsRequest. You cannot obtain details of bank transfer withdrawals, for example. 
<br/><br/>
Character length and limitations: 17 single-byte alphanumeric characters
</documentation></annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="GetTransactionDetailsResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element ref="ebl:PaymentTransactionDetails"/>
							<xs:element ref="ebl:ThreeDSecureDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="BillUserRequest" type="ns:BillUserRequestType"/>
			<xs:element name="BillUserResponse" type="ns:BillUserResponseType"/>
			<xs:element name="BillUserReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:BillUserRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="BillUserRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element ref="ebl:MerchantPullPaymentDetails"/>
							<xs:element maxOccurs="1" minOccurs="0" name="ReturnFMFDetails" type="xs:int">
								<annotation>
									<documentation>This flag indicates that the response should include FMFDetails</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="BillUserResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element ref="ebl:BillUserResponseDetails"/>
							<xs:element maxOccurs="1" minOccurs="0" name="FMFDetails" type="ebl:FMFDetailsType"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="TransactionSearchRequest" type="ns:TransactionSearchRequestType"/>
			<xs:element name="TransactionSearchResponse" type="ns:TransactionSearchResponseType"/>
			<xs:element name="TransactionSearchReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:TransactionSearchRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="TransactionSearchRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="StartDate" type="xs:dateTime">
								<annotation><documentation>The earliest transaction date at which to start the search. No wildcards are allowed. 
<br/><br/>
<b>Required</b>
</documentation>
</annotation>
							</xs:element>
							<xs:element minOccurs="0" name="EndDate" type="xs:dateTime">
								<annotation><documentation>The latest transaction date to be included in the search 
<br/><br/>
Optional
</documentation></annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="Payer" type="ebl:EmailAddressType">
								<annotation><documentation>Search by the buyer's email address 
<br/><br/>
Optional
<br/><br/>
Character length and limitations: 127 single-byte alphanumeric characters
</documentation></annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="Receiver" type="ebl:EmailAddressType">
								<annotation><documentation>Search by the receiver's email address. If the merchant account has only one email, this is the primary email. Can also be a non-primary email.
<br/><br/>
Optional
</documentation></annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="ReceiptID" type="xs:string">
								<annotation><documentation>Search by the PayPal Account Optional receipt ID
<br/><br/>
Optional
</documentation></annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="TransactionID" type="ebl:TransactionId">
								<annotation><documentation>Search by the transaction ID. 
<br/><br/>
Optional
<br/><br/>
The returned results are from the merchant's transaction records. 
<br/><br/>
Character length and limitations: 19 single-byte characters maximum
</documentation></annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="ProfileID" type="xs:string">
								<annotation><documentation>Search by Recurring Payment Profile id.  The ProfileID is returned as part of the CreateRecurringPaymentsProfile API response. 
<br/><br/>
Optional
</documentation></annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="PayerName" type="ebl:PersonNameType">
								<annotation><documentation>Search by the buyer's name 
<br/><br/>
Optional
<br/><br/>
Salutation: 20 single-byte character limit.
<br/><br/>
FirstName: 25 single-byte character limit.
<br/><br/>
MiddleName: 25 single-byte character limit.
<br/><br/>
LastName: 25 single-byte character limit.
<br/><br/>
Suffix: 12 single-byte character limit.
</documentation></annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="AuctionItemNumber" type="xs:string">
								<annotation><documentation>Search by item number of the purchased goods.
<br/><br/>
Optional
<br/><br/>
To search for purchased items not related to auctions, set the AuctionItemNumber element to the value of the HTML item_number variable set in the shopping cart for the original transaction.</documentation></annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="InvoiceID" type="xs:string">
							<annotation><documentation>Search by invoice identification key, as set by you for the original transaction. InvoiceID searches the invoice records for items sold by the merchant, not the items purchased. 
<br/><br/>
Optional
<br/><br/>
The value for InvoiceID must exactly match an invoice identification number. No wildcards are allowed. 
<br/><br/>
Character length and limitations: 127 single-byte characters maximum</documentation></annotation></xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="CardNumber" type="xs:string"/>
							<xs:element maxOccurs="1" minOccurs="0" name="TransactionClass" type="ebl:PaymentTransactionClassCodeType">
								<annotation><documentation>
								Search by classification of transaction. Some kinds of possible classes of transactions are not searchable with TransactionSearchRequest. You cannot search for bank transfer withdrawals, for example. 
<br/><br/>
Optional
<br/><br/>
All: all transaction classifications.
<br/><br/>
Sent: only payments sent.
<br/><br/>
Received: only payments received.
<br/><br/>
MassPay: only mass payments.
<br/><br/>
MoneyRequest: only money requests.
<br/><br/>
FundsAdded: only funds added to balance.
<br/><br/>
FundsWithdrawn: only funds withdrawn from balance.
<br/><br/>
Referral: only transactions involving referrals.
<br/><br/>
Fee: only transactions involving fees.
<br/><br/>
Subscription: only transactions involving subscriptions.
<br/><br/>
Dividend: only transactions involving dividends.
<br/><br/>
Billpay: only transactions involving BillPay Transactions.
<br/><br/>
Refund: only transactions involving funds.
<br/><br/>
CurrencyConversions: only transactions involving currency conversions.
<br/><br/>
BalanceTransfer: only transactions involving balance transfers.
<br/><br/>
Reversal: only transactions involving BillPay reversals.
<br/><br/>
Shipping: only transactions involving UPS shipping fees.
<br/><br/>
BalanceAffecting: only transactions that affect the account balance.
<br/><br/>
ECheck: only transactions involving eCheck
</documentation></annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="Amount" type="cc:BasicAmountType">
								<annotation><documentation>Search by transaction amount 
<br/><br/>
Optional
<br/><br/>
You must set the currencyID attribute to one of the three-character currency codes for any of the supported PayPal currencies. </documentation></annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="CurrencyCode" type="ebl:CurrencyCodeType">
								<annotation><documentation>Search by currency code
<br/><br/>
Optional
</documentation></annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="Status" type="ebl:PaymentTransactionStatusCodeType">
								<annotation><documentation>Search by transaction status 
<br/><br/>
Optional
<br/><br/>
Pending: The payment is pending. The specific reason the payment is pending is returned by the GetTransactionDetails APIPendingReason element. For more information, see PendingReason.
<br/><br/>
Processing: The payment is being processed.
<br/><br/>
Success: The payment has been completed and the funds have been added successfully to your account balance.
<br/><br/>
Denied: You denied the payment. This happens only if the payment was previously pending.
<br/><br/>
Reversed: A payment was reversed due to a chargeback or other type of reversal. The funds have been removed from your account balance and returned to the buyer.
</documentation></annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="TransactionSearchResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="unbounded" minOccurs="0" ref="ebl:PaymentTransactions">
								<annotation><documentation>Results of a Transaction Search.</documentation></annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="MassPayRequest" type="ns:MassPayRequestType"/>
			<xs:element name="MassPayResponse" type="ns:MassPayResponseType"/>
			<xs:element name="MassPayReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:MassPayRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="MassPayRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="0" name="EmailSubject" type="xs:string">
								<annotation>
									<documentation>Subject line of the email sent to all recipients. This subject is not contained in the input file; you must create it with your application. 
<br/>
										<br/>
Optional
<br/>
										<br/>
Character length and limitations: 255 single-byte alphanumeric characters
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="ReceiverType" type="ebl:ReceiverInfoCodeType">
								<annotation>
									<documentation>Indicates how you identify the recipients of payments in all MassPayItems: either by EmailAddress (ReceiverEmail in MassPayItem), PhoneNumber (ReceiverPhone in MassPayItem), or by UserID (ReceiverID in MassPayItem). 
<br/>
										<br/>
										<b>Required. </b>You must specify one or the other of EmailAddress or UserID.
</documentation>
								</annotation>
							</xs:element>
                                                        <xs:element maxOccurs="1" minOccurs="0" name="ButtonSource" type="xs:string">
								<annotation>
									<documentation>Known as BN code, to track the partner referred merchant transactions. 
<br/><br/>
Optional
<br/><br/>
Character length and limitations: 32 single-byte alphanumeric characters
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="250" minOccurs="1" name="MassPayItem" type="ns:MassPayRequestItemType">
								<annotation>
									<documentation>Details of each payment. A single MassPayRequest can include up to 250 MassPayItems. 
<br/>
										<br/>
										<b>Required</b>
									</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="MassPayResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
				</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="MassPayRequestItemType">
				<xs:annotation>
					<xs:documentation>
					MassPayRequestItemType
				</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="ReceiverEmail" type="ebl:EmailAddressType">
						<annotation>
							<documentation>Email address of recipient. 
<br/>
								<br/>
								<b>Required</b>
								<br/>
								<br/>
You must specify ReceiverEmail, ReceiverPhone, or ReceiverID, but all MassPayItems in a request must use the same field to specify recipients.
<br/>
								<br/>
Character length and limitations: 127 single-byte characters maximum.
</documentation>
						</annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="ReceiverPhone" type="xs:string">
						<annotation>
							<documentation>Phone number of recipient. 
<br/>
								<br/>
								<b>Required</b>
								<br/>
								<br/>
You must specify ReceiverEmail, ReceiverPhone, or ReceiverID, but all MassPayItems in a request must use the same field to specify recipients.
<br/>
<br/>
</documentation>
						</annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="ReceiverID" type="ebl:UserIDType">
						<annotation>
							<documentation>Unique PayPal customer account number. This value corresponds to the value of PayerID returned by GetTransactionDetails. 
<br/>
								<br/>
								<b>Required</b>
								<br/>
								<br/>
You must specify ReceiverEmail, ReceiverPhone, or ReceiverID, but all MassPayItems in a request must use the same field to specify recipients.
<br/>
								<br/>
Character length and limitations: 17 single-byte characters maximum.
</documentation>
						</annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="1" name="Amount" type="cc:BasicAmountType">
						<annotation>
							<documentation>Payment amount. You must set the currencyID attribute to one of the three-character currency codes for any of the supported PayPal currencies. 
<br/>
								<br/>
								<b>Required</b>
								<br/>
								<br/>
You cannot mix currencies in a single MassPayRequest. A single request must include items that are of the same currency.
</documentation>
						</annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="UniqueId" type="xs:string">
						<annotation>
							<documentation>Transaction-specific identification number for tracking in an accounting system. 
<br/>
								<br/>
Optional
<br/>
								<br/>
Character length and limitations: 30 single-byte characters. No whitespace allowed.
</documentation>
						</annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="Note" type="xs:string">
						<annotation>
							<documentation>Custom note for each recipient. 
<br/>
								<br/>
Optional
<br/>
								<br/>
Character length and limitations: 4,000 single-byte alphanumeric characters
</documentation>
						</annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:element name="BAUpdateRequest" type="ns:BAUpdateRequestType"/>
			<xs:element name="BAUpdateResponse" type="ns:BAUpdateResponseType"/>
			<xs:element name="BillAgreementUpdateReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:BAUpdateRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="BAUpdateRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="ReferenceID" type="xs:string">
								<annotation>
									<documentation>
									</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="BillingAgreementDescription" type="xs:string">
								<annotation>
									<documentation>
									</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="BillingAgreementStatus" type="ebl:MerchantPullStatusCodeType">
								<annotation>
									<documentation>
									</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="BillingAgreementCustom" type="xs:string">
								<annotation>
									<documentation>
									</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="BAUpdateResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element ref="ebl:BAUpdateResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="AddressVerifyRequest" type="ns:AddressVerifyRequestType"/>
			<xs:element name="AddressVerifyResponse" type="ns:AddressVerifyResponseType"/>
			<xs:element name="AddressVerifyReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:AddressVerifyRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="AddressVerifyRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Email" type="ebl:EmailAddressType">
								<annotation>
									<documentation>Email address of buyer to be verified. 
<br/>
										<br/>
										<b>Required</b>
										<br/>
										<br/>
Maximum string length: 255 single-byte characters Input mask: ?@?.??

</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="Street" type="xs:string">
								<annotation>
									<documentation>First line of buyer’s billing or shipping street address to be verified. 
<br/>
										<br/>
										<b>Required</b>
										<br/>
										<br/>For verification, input value of street address must match the first three single-byte characters of the street address on file for the PayPal account.
<br/>
										<br/>
Maximum string length: 35 single-byte characters Alphanumeric plus - , . ‘ # \ Whitespace and case of input value are ignored.
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="Zip" type="xs:string">
								<annotation>
									<documentation>Postal code to be verified. 
<br/>
										<br/>
										<b>Required</b>
										<br/>
										<br/>

For verification, input value of postal code must match the first five single-byte characters of the postal code on file for the PayPal account.
<br/>
										<br/>
Maximum string length: 16 single-byte characters Whitespace and case of input value are ignored.
</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="AddressVerifyResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="ConfirmationCode" type="ebl:AddressStatusCodeType">
								<annotation>
									<documentation>Confirmation of a match, with one of the following tokens:
							<br/>
										<br/>
None: The input value of the Email object does not match any email address on file at PayPal.
	<br/>
										<br/>
Confirmed: If the value of the StreetMatch object is Matched, PayPal responds that the entire postal address is confirmed.
	<br/>
										<br/>
Unconfirmed: PayPal responds that the postal address is unconfirmed</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="StreetMatch" type="ebl:MatchStatusCodeType">
								<annotation>
									<documentation>PayPal has compared the postal address you want to verify with the postal address on file at PayPal.
								<br/>
										<br/>
								None: The input value of the Email object does not match any email address on file at PayPal. In addition, an error response is returned. No further comparison of other input values has been made.
									<br/>
										<br/>
Matched: The street address matches the street address on file at PayPal.
	<br/>
										<br/>
Unmatched: The street address does not match the street address on file at PayPal. 
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="ZipMatch" type="ebl:MatchStatusCodeType">
								<annotation>
									<documentation>PayPal has compared the zip code you want to verify with the zip code on file for the email address. 
								<br/>
										<br/>
								None: The street address was unmatched. No further comparison of other input values has been made.
																<br/>
										<br/>Matched: The zip code matches the zip code on file at PayPal.
																								<br/>
										<br/>Unmatched: The zip code does not match the zip code on file at PayPal. 
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="CountryCode" type="ebl:CountryCodeType">
								<annotation>
									<documentation>Two-character country code (ISO 3166) on file for the PayPal email address. </documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="PayPalToken" type="xs:string">
								<annotation>
									<documentation>The token prevents a buyer from using any street address other than the address on file at PayPal during additional purchases he might make from the merchant. It contains encrypted information about the user’s street address and email address. You can pass the value of the token with the Buy Now button HTML address_api_token variable so that PayPal prevents the buyer from using any street address or email address other than those verified by PayPal. The token is valid for 24 hours. 
								<br/>
Character length and limitations: 94 single-byte characters
								</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="EnterBoardingRequest" type="ns:EnterBoardingRequestType"/>
			<xs:element name="EnterBoardingResponse" type="ns:EnterBoardingResponseType"/>
			<xs:element name="EnterBoardingReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:EnterBoardingRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="EnterBoardingRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:EnterBoardingRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="EnterBoardingResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Token" type="ebl:ExpressCheckoutTokenType">
								<annotation>
								<documentation>
								A unique token that identifies this boarding session. 
Use this token with the GetBoarding Details API call.
<br/><br/>
Character length and limitations: 64 alphanumeric characters. The token has the following format:
<br/><br/>
OB-61characterstring</documentation></annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="GetBoardingDetailsRequest" type="ns:GetBoardingDetailsRequestType"/>
			<xs:element name="GetBoardingDetailsResponse" type="ns:GetBoardingDetailsResponseType"/>
			<xs:element name="GetBoardingDetailsReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:GetBoardingDetailsRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="GetBoardingDetailsRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Token" type="ebl:ExpressCheckoutTokenType">
								<annotation>
								<documentation>
								A unique token returned by the EnterBoarding API call that identifies this boarding session. 
<br/><br/>
<b>Required</b>
<br/><br/>
Character length and limitations: 64 alphanumeric characters. The token has the following format:
<br/><br/>
OB-61characterstring</documentation></annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="GetBoardingDetailsResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:GetBoardingDetailsResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="SetAuthFlowParamRequest" type="ns:SetAuthFlowParamRequestType"/>
			<xs:element name="SetAuthFlowParamResponse" type="ns:SetAuthFlowParamResponseType"/>
			<xs:element name="SetAuthFlowParamReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:SetAuthFlowParamRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="SetAuthFlowParamRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:SetAuthFlowParamRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="SetAuthFlowParamResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Token" type="ebl:AuthFlowTokenType">
								<annotation><documentation>A timestamped token by which you identify to PayPal that you are processing this user. The token expires after three hours.
								<br/><br/>
Character length and limitations: 20 single-byte characters
</documentation></annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="GetAuthDetailsRequest" type="ns:GetAuthDetailsRequestType"/>
			<xs:element name="GetAuthDetailsResponse" type="ns:GetAuthDetailsResponseType"/>
			<xs:element name="GetAuthDetailsReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:GetAuthDetailsRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="GetAuthDetailsRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Token" type="ebl:AuthFlowTokenType">
								<annotation><documentation>A timestamped token, the value of which was returned by SetAuthFlowParam Response. 
<br/><br/>
<b>Required</b>
<br/><br/>
Character length and limitations: 20 single-byte characters
</documentation></annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="GetAuthDetailsResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:GetAuthDetailsResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="SetAccessPermissionsRequest" type="ns:SetAccessPermissionsRequestType"/>
			<xs:element name="SetAccessPermissionsResponse" type="ns:SetAccessPermissionsResponseType"/>
			<xs:element name="SetAccessPermissionsReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:SetAccessPermissionsRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="SetAccessPermissionsRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:SetAccessPermissionsRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="SetAccessPermissionsResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Token" type="ebl:AuthFlowTokenType">
								<annotation><documentation>A timestamped token by which you identify to PayPal that you are processing this user. The token expires after three hours.
								<br/><br/>
Character length and limitations: 20 single-byte characters
</documentation></annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:element name="UpdateAccessPermissionsRequest" type="ns:UpdateAccessPermissionsRequestType"/>
			<xs:element name="UpdateAccessPermissionsResponse" type="ns:UpdateAccessPermissionsResponseType"/>
			<xs:element name="UpdateAccessPermissionsReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:UpdateAccessPermissionsRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="UpdateAccessPermissionsRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="PayerID" type="ebl:UserIDType">
								<annotation>
									<documentation>Unique PayPal customer account number, the value of which was returned by GetAuthDetails Response.
									<br/><br/>
									<b>Required</b>
									<br/><br/>
									Character length and limitations: 20 single-byte characters
									</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="UpdateAccessPermissionsResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Status" type="xs:string">
								<annotation>
									<documentation>The status of the update call, Success/Failure.
									<br/><br/>
									Character length and limitations: 20 single-byte characters
									</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>                        
                      
			<xs:element name="GetAccessPermissionDetailsRequest" type="ns:GetAccessPermissionDetailsRequestType"/>
			<xs:element name="GetAccessPermissionDetailsResponse" type="ns:GetAccessPermissionDetailsResponseType"/>
			<xs:element name="GetAccessPermissionDetailsReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:GetAccessPermissionDetailsRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="GetAccessPermissionDetailsRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Token" type="ebl:AuthFlowTokenType">
								<annotation><documentation>A timestamped token, the value of which was returned by SetAuthFlowParam Response. 
									<br/><br/>
									<b>Required</b>
									<br/><br/>
									Character length and limitations: 20 single-byte characters
								</documentation></annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="GetAccessPermissionDetailsResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:GetAccessPermissionDetailsResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
                        
			<xs:element name="GetIncentiveEvaluationRequest" type="ns:GetIncentiveEvaluationRequestType"/>
			<xs:element name="GetIncentiveEvaluationResponse" type="ns:GetIncentiveEvaluationResponseType"/>
			<xs:element name="GetIncentiveEvaluationReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:GetIncentiveEvaluationRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="GetIncentiveEvaluationRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:GetIncentiveEvaluationRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="GetIncentiveEvaluationResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:GetIncentiveEvaluationResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:element name="SetExpressCheckoutRequest" type="ns:SetExpressCheckoutRequestType"/>
			<xs:element name="SetExpressCheckoutResponse" type="ns:SetExpressCheckoutResponseType"/>
			<xs:element name="SetExpressCheckoutReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:SetExpressCheckoutRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="SetExpressCheckoutRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:SetExpressCheckoutRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="SetExpressCheckoutResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Token" type="ebl:ExpressCheckoutTokenType">
								<annotation><documentation>A timestamped token by which you identify to PayPal that you are processing this payment with Express Checkout. The token expires after three hours. If you set Token in the SetExpressCheckoutRequest, the value of Token in the response is identical to the value in the request. 
								<br/><br/>
Character length and limitations: 20 single-byte characters
</documentation></annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="GetExpressCheckoutDetailsRequest" type="ns:GetExpressCheckoutDetailsRequestType"/>
			<xs:element name="GetExpressCheckoutDetailsResponse" type="ns:GetExpressCheckoutDetailsResponseType"/>
			<xs:element name="GetExpressCheckoutDetailsReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:GetExpressCheckoutDetailsRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="GetExpressCheckoutDetailsRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Token" type="ebl:ExpressCheckoutTokenType">
								<annotation><documentation>A timestamped token, the value of which was returned by SetExpressCheckoutResponse. 
<br/><br/>
<b>Required</b>
<br/><br/>
Character length and limitations: 20 single-byte characters
</documentation></annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="GetExpressCheckoutDetailsResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:GetExpressCheckoutDetailsResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="DoExpressCheckoutPaymentRequest" type="ns:DoExpressCheckoutPaymentRequestType"/>
			<xs:element name="DoExpressCheckoutPaymentResponse" type="ns:DoExpressCheckoutPaymentResponseType"/>
			<xs:element name="DoExpressCheckoutPaymentReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:DoExpressCheckoutPaymentRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="DoExpressCheckoutPaymentRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:DoExpressCheckoutPaymentRequestDetails"/>
							<xs:element maxOccurs="1" minOccurs="0" name="ReturnFMFDetails" type="xs:int">
								<annotation>
									<documentation>This flag indicates that the response should include FMFDetails</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="DoExpressCheckoutPaymentResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:DoExpressCheckoutPaymentResponseDetails"/>
							<xs:element maxOccurs="1" minOccurs="0" name="FMFDetails" type="ebl:FMFDetailsType"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="DoUATPExpressCheckoutPaymentRequest" type="ns:DoUATPExpressCheckoutPaymentRequestType"/>
			<xs:element name="DoUATPExpressCheckoutPaymentResponse" type="ns:DoUATPExpressCheckoutPaymentResponseType"/>
			<xs:element name="DoUATPExpressCheckoutPaymentReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:DoUATPExpressCheckoutPaymentRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="DoUATPExpressCheckoutPaymentRequestType">
				<xs:complexContent>
					<xs:extension base="ns:DoExpressCheckoutPaymentRequestType">
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="DoUATPExpressCheckoutPaymentResponseType">
				<xs:complexContent>
					<xs:extension base="ns:DoExpressCheckoutPaymentResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:UATPDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:element name="ManagePendingTransactionStatusRequest" type="ns:ManagePendingTransactionStatusRequestType"/>
			<xs:element name="ManagePendingTransactionStatusResponse" type="ns:ManagePendingTransactionStatusResponseType"/>
			<xs:element name="ManagePendingTransactionStatusReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:ManagePendingTransactionStatusRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="ManagePendingTransactionStatusRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="TransactionID" type="ebl:TransactionId"/>
							<xs:element maxOccurs="1" minOccurs="1" name="Action" type="ebl:FMFPendingTransactionActionType"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="ManagePendingTransactionStatusResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="TransactionID" type="ebl:TransactionId"/>
							<xs:element maxOccurs="1" minOccurs="0" name="Status" type="xs:string"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:element name="DoDirectPaymentRequest" type="ns:DoDirectPaymentRequestType"/>
			<xs:element name="DoDirectPaymentResponse" type="ns:DoDirectPaymentResponseType"/>
			<xs:element name="DoDirectPaymentReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:DoDirectPaymentRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="DoDirectPaymentRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:DoDirectPaymentRequestDetails"/>
							<xs:element maxOccurs="1" minOccurs="0" name="ReturnFMFDetails" type="xs:int">
								<annotation>
									<documentation>This flag indicates that the response should include FMFDetails</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="DoDirectPaymentResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Amount" type="cc:BasicAmountType">
							<annotation>
							<documentation>
							The amount of the payment as specified by you on DoDirectPaymentRequest.</documentation></annotation></xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="AVSCode" type="xs:string">
					<annotation>
					<documentation>
					Address Verification System response code. Character limit: One single-byte alphanumeric character
				<table>
				<tr><th>AVS Code</th><th>Meaning</th><th>Matched Details</th></tr> 
<tr><td>A </td><td>Address</td><td>Address only (no ZIP) </td></tr> 
<tr><td>B </td><td>International “A”</td><td>Address only (no ZIP)</td></tr>  
<tr><td>C</td><td>International “N”</td><td> None </td></tr> 
<tr><td>D</td><td>International “X” </td><td>Address and Postal Code</td></tr>  
<tr><td>E </td><td>Not allowed for MOTO (Internet/Phone) transactions </td><td>Not applicable</td></tr> 
<tr><td>F </td><td>UK-specific “X”</td><td>Address and Postal Code </td></tr> 
<tr><td>G </td><td>Global Unavailable</td><td> Not applicable </td></tr>
<tr><td>I </td><td>International Unavailable</td><td>Not applicable </td></tr> 
<tr><td>N </td><td>No</td><td>None</td></tr>  
<tr><td>P</td><td>Postal (International “Z”)</td><td>Postal Code only (no Address) </td></tr>  
<tr><td>R</td><td>Retry</td><td>Not applicable</td></tr>   
<tr><td>S </td><td>Service not Supported </td><td>Not applicable </td></tr>
<tr><td>U </td><td>Unavailable</td><td>Not applicable </td></tr> 
<tr><td>W </td><td>Whole ZIP</td><td>Nine-digit ZIP code (no Address) </td></tr> 
<tr><td>X </td><td>Exact match </td><td>Address and nine-digit ZIP code</td></tr> 
<tr><td>Y </td><td>Yes</td><td>Address and five-digit ZIP</td></tr>  
<tr><td>Z </td><td>ZIP</td><td> Five-digit ZIP code (no Address)</td></tr> 
<tr><td>All others </td><td>Error Not applicable</td><td/></tr>
</table>
</documentation></annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="CVV2Code" type="xs:string">
								<annotation>
								<documentation>
								Result of the CVV2 check by PayPal.
								<table>
								<tr><th>CVV2 Code</th><th>Meaning</th><th>Matched Details</th></tr>   
<tr><td>M </td><td>Match</td><td>CVV2 </td></tr> 
<tr><td>N </td><td>No match </td><td>None</td></tr> 
<tr><td>P </td><td>Not Processed</td><td>Not applicable</td></tr>  
<tr><td>S</td><td>Service not Supported</td><td>Not applicable</td></tr>   
<tr><td>U </td><td>Unavailable</td><td>Not applicable</td></tr>  
<tr><td>X</td><td>No response</td><td>  Not applicable</td></tr> 
<tr><td>All others </td><td>Error</td><td>Not applicable </td></tr> 
</table>
</documentation></annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="TransactionID" type="ebl:TransactionId">
							<annotation>
							<documentation>
							Transaction identification number.
							<br/><br/>
							Character length and limitations: 19 characters maximum.</documentation></annotation></xs:element>
							<xs:element minOccurs="0" name="PendingReason" type="ebl:PendingStatusCodeType">
							<annotation>
							<documentation>
							The reason why a particular transaction went in pending.
							</documentation>
							</annotation>
							</xs:element>
							<xs:element minOccurs="0" name="PaymentStatus" type="ebl:PaymentStatusCodeType">
							<annotation>
							<documentation>
							This will identify the actual transaction status.
							</documentation>
							</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="FMFDetails" type="ebl:FMFDetailsType"/>
							<xs:element maxOccurs="1" minOccurs="0" name="ThreeDSecureResponse" type="ebl:ThreeDSecureResponseType"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="DoCaptureRequest" type="ns:DoCaptureRequestType"/>
			<xs:element name="DoCaptureResponse" type="ns:DoCaptureResponseType"/>
			<xs:element name="DoCaptureReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:DoCaptureRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="DoCaptureRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="AuthorizationID" type="ebl:AuthorizationId">
								<annotation>
									<documentation>The authorization identification number of the payment you want to capture. 
<br/>
										<br/>
										<b>Required</b>
										<br/>
										<br/>
Character length and limits: 19 single-byte characters maximum
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="Amount" type="cc:BasicAmountType">
								<annotation>
									<documentation>Amount to authorize. You must set the currencyID attribute to USD. 
<br/>
										<br/>
										<b>Required</b>
										<br/>
										<br/>
Limitations: Must not exceed $10,000 USD in any currency. No currency symbol. Decimal separator must be a period (.), and the thousands separator must be a comma (,)
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="CompleteType" type="ebl:CompleteCodeType">
								<annotation>
									<documentation>Indicates if this capture is the last capture you intend to make. The default is Complete. If CompleteType is Complete, any remaining amount of the original reauthorized transaction is automatically voided. 
<br/>
										<br/>
										<b>Required</b>
										<br/>
										<br/>
Character length and limits: 12 single-byte alphanumeric characters
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="Note" type="xs:string">
								<annotation>
									<documentation>An informational note about this settlement that is displayed to the payer in email and in  transaction history. 
<br/>
										<br/>
Optional
<br/>
										<br/>
Character length and limits: 255 single-byte characters
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="InvoiceID" type="xs:string">
								<annotation>
									<documentation>Your invoice number or other identification number. 
<br/>
										<br/>
The InvoiceID value is recorded only if the authorization you are capturing is an order authorization, not a basic authorization.
<br/>
										<br/>
Optional
<br/>
										<br/>
Character length and limits: 127 single-byte alphanumeric characters
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" ref="ebl:EnhancedData">
								<annotation>
									<documentation>Contains enhanced data like airline itinerary information.
										<br/>
											<br/>
												<b>Not Required</b>
											<br/>
									</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="Descriptor" type="xs:string">
								<annotation>
									<documentation>dynamic descriptor
										<br/>
										<br/>
Dynamic descriptor is used for merchant to provide detail of a transaction appears on statement
										<br/>
										<br/>
										<b>Optional</b>
										<br/>
										<br/>
Character length and limits: &lt;18 characters alphanumeric characters
</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="DoCaptureResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:DoCaptureResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="DoReauthorizationRequest" type="ns:DoReauthorizationRequestType"/>
			<xs:element name="DoReauthorizationResponse" type="ns:DoReauthorizationResponseType"/>
			<xs:element name="DoReauthorizationReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:DoReauthorizationRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="DoReauthorizationRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="AuthorizationID" type="xs:string">
								<annotation>
									<documentation>The value of a previously authorized transaction identification number returned by a PayPal product. You can obtain a buyer's transaction number from the TransactionID element of the PayerInfo structure returned by GetTransactionDetailsResponse. 
<br/>
										<br/>
										<b>Required</b>
										<br/>
										<br/>
Character length and limits: 19 single-byte characters maximum
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="Amount" type="cc:BasicAmountType">
								<annotation>
									<documentation>Amount to reauthorize. 
<br/>
										<br/>
										<b>Required</b>
										<br/>
										<br/>
Limitations: Must not exceed $10,000 USD in any currency. No currency symbol. Decimal separator must be a period (.), and the thousands separator must be a comma (,).
</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="DoReauthorizationResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="AuthorizationID" type="xs:string">
								<annotation>
									<documentation>A new authorization identification number.
								<br/>
										<br/>Character length and limits: 19 single-byte characters 
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" ref="ebl:AuthorizationInfo"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="DoVoidRequest" type="ns:DoVoidRequestType"/>
			<xs:element name="DoVoidResponse" type="ns:DoVoidResponseType"/>
			<xs:element name="DoVoidReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:DoVoidRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="DoVoidRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="AuthorizationID" type="xs:string">
								<annotation>
									<documentation>The value of the original authorization identification number returned by a PayPal product. 
<br/>
										<br/>
If you are voiding a transaction that has been reauthorized, use the ID from the original authorization, and not the reauthorization.
<br/>
										<br/>
										<b>Required</b>
										<br/>
										<br/>
Character length and limits: 19 single-byte characters
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="Note" type="xs:string">
								<annotation>
									<documentation>An informational note about this settlement that is displayed to the payer in email and in  transaction history. 
<br/>
										<br/>
Optional
<br/>
										<br/>
Character length and limits: 255 single-byte characters
</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="DoVoidResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="AuthorizationID" type="xs:string">
								<annotation>
									<documentation>The authorization identification number you specified in the request. 
<br/>
										<br/>
Character length and limits: 19 single-byte characters
</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="DoAuthorizationRequest" type="ns:DoAuthorizationRequestType"/>
			<xs:element name="DoAuthorizationResponse" type="ns:DoAuthorizationResponseType"/>
			<xs:element name="DoAuthorizationReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:DoAuthorizationRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="DoAuthorizationRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="TransactionID" type="xs:string">
								<annotation>
									<documentation>The value of the order’s transaction identification number returned by a PayPal product. 
<br/>
										<br/>
										<b>Required</b>
										<br/>
										<br/>Character length and limits: 19 single-byte characters maximum
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="TransactionEntity" type="ebl:TransactionEntityType">
								<annotation>
									<documentation>Type of transaction to authorize. The only allowable value is <b>Order</b>, which means that the transaction represents a customer order that can be fulfilled over 29 days. 
<br/>
										<br/>
Optional
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="Amount" type="cc:BasicAmountType">
								<annotation>
									<documentation>Amount to authorize. 
<br/>
										<br/>
										<b>Required</b>
										<br/>
										<br/>
Limitations: Must not exceed $10,000 USD in any currency. No currency symbol. Decimal separator must be a period (.), and the thousands separator must be a comma (,).
</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="DoAuthorizationResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="TransactionID" type="xs:string">
								<annotation>
									<documentation>An authorization identification number. 
								<br/>
										<br/>
Character length and limits: 19 single-byte characters
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="Amount" type="cc:BasicAmountType">
								<annotation>
									<documentation>The amount and currency you specified in the request. 
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" ref="ebl:AuthorizationInfo"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="DoUATPAuthorizationRequest" type="ns:DoUATPAuthorizationRequestType"/>
			<xs:element name="DoUATPAuthorizationResponse" type="ns:DoUATPAuthorizationResponseType"/>
			<xs:element name="DoUATPAuthorizationReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:DoUATPAuthorizationRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="DoUATPAuthorizationRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:UATPDetails">
								<annotation>
									<documentation>UATP card details
<br/>
										<br/>
										<b>Required</b>
										<br/>
									</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="TransactionEntity" type="ebl:TransactionEntityType">
								<annotation>
									<documentation>Type of transaction to authorize. The only allowable value is <b>Order</b>, which means that the transaction represents a customer order that can be fulfilled over 29 days. 
<br/>
										<br/>
Optional
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="Amount" type="cc:BasicAmountType">
								<annotation>
									<documentation>Amount to authorize. 
<br/>
										<br/>
										<b>Required</b>
										<br/>
										<br/>
Limitations: Must not exceed $10,000 USD in any currency. No currency symbol. Decimal separator must be a period (.), and the thousands separator must be a comma (,).
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="InvoiceID" type="xs:string">
								<annotation>
									<documentation> Invoice ID. A pass through.
									</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="DoUATPAuthorizationResponseType">
				<xs:complexContent>
					<xs:extension base="ns:DoAuthorizationResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:UATPDetails"/>
							<xs:element maxOccurs="1" minOccurs="1" name="AuthorizationCode" type="xs:string">
								<annotation>
									<documentation> Auth Authorization Code.
									</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="InvoiceID" type="xs:string">
								<annotation>
									<documentation> Invoice ID. A pass through.
									</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="CreateMobilePaymentRequest" type="ns:CreateMobilePaymentRequestType"/>
			<xs:element name="CreateMobilePaymentResponse" type="ns:CreateMobilePaymentResponseType"/>
			<xs:element name="CreateMobilePaymentReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:CreateMobilePaymentRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="CreateMobilePaymentRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:CreateMobilePaymentRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="CreateMobilePaymentResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<sequence>
						</sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="GetMobileStatusRequest" type="ns:GetMobileStatusRequestType"/>
			<xs:element name="GetMobileStatusResponse" type="ns:GetMobileStatusResponseType"/>
			<xs:element name="GetMobileStatusReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:GetMobileStatusRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="GetMobileStatusRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:GetMobileStatusRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="GetMobileStatusResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="IsActivated" type="xs:integer">
								<annotation>
									<documentation>Indicates whether the phone is activated for mobile payments
<br/>
										<br/>
</documentation>
								</annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="PaymentPending" type="xs:integer">
								<annotation>
									<documentation>Indicates whether there is a payment pending from the phone
<br/>
										<br/>
</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="SetMobileCheckoutRequest" type="ns:SetMobileCheckoutRequestType"/>
			<xs:element name="SetMobileCheckoutResponse" type="ns:SetMobileCheckoutResponseType"/>
			<xs:element name="SetMobileCheckoutReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:SetMobileCheckoutRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="SetMobileCheckoutRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:SetMobileCheckoutRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="SetMobileCheckoutResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Token" type="xs:string">
								<annotation><documentation>A timestamped token by which you identify to PayPal that you are processing this payment with Mobile Checkout. The token expires after three hours.
								<br/><br/>
Character length and limitations: 20 single-byte characters
</documentation></annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="DoMobileCheckoutPaymentRequest" type="ns:DoMobileCheckoutPaymentRequestType"/>
			<xs:element name="DoMobileCheckoutPaymentResponse" type="ns:DoMobileCheckoutPaymentResponseType"/>
			<xs:element name="DoMobileCheckoutPaymentReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:DoMobileCheckoutPaymentRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="DoMobileCheckoutPaymentRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Token" type="xs:string">
								<annotation><documentation>A timestamped token, the value of which was returned by SetMobileCheckoutResponse. 
<br/><br/>
<b>Required</b>
<br/><br/>
Character length and limitations: 20 single-byte characters
</documentation></annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="DoMobileCheckoutPaymentResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:DoMobileCheckoutPaymentResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
                        <xs:element name="GetBalanceRequest" type="ns:GetBalanceRequestType"/>
                        <xs:element name="GetBalanceResponse" type="ns:GetBalanceResponseType"/>
                        <xs:element name="GetBalanceReq">
                                <xs:complexType>
                                        <xs:sequence>
                                                <xs:element ref="ns:GetBalanceRequest"/>
                                        </xs:sequence>
                                </xs:complexType>
                        </xs:element>
                        <xs:complexType name="GetBalanceRequestType">
                                <xs:complexContent>
                                     <xs:extension base="ebl:AbstractRequestType">                                        
                                         <xs:sequence>
                                                <xs:element maxOccurs="1" minOccurs="0" name="ReturnAllCurrencies" type="xs:string"/>
                                        </xs:sequence>
                                     </xs:extension>
                                </xs:complexContent>
                        </xs:complexType>
                        <xs:complexType name="GetBalanceResponseType">
                                <xs:complexContent>
                                        <xs:extension base="ebl:AbstractResponseType">
                                                <xs:sequence>
                                                        <xs:element maxOccurs="1" minOccurs="1" name="Balance" type="cc:BasicAmountType"/>
                                                        <xs:element maxOccurs="1" minOccurs="1" name="BalanceTimeStamp" type="xs:dateTime"/>
                                                        <xs:element maxOccurs="unbounded" minOccurs="0" name="BalanceHoldings" type="cc:BasicAmountType"/>
                                                </xs:sequence>
                                        </xs:extension>
                                </xs:complexContent>
                        </xs:complexType>

			<xs:element name="SetCustomerBillingAgreementRequest" type="ns:SetCustomerBillingAgreementRequestType"/>
			<xs:element name="SetCustomerBillingAgreementResponse" type="ns:SetCustomerBillingAgreementResponseType"/>
			<xs:element name="SetCustomerBillingAgreementReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:SetCustomerBillingAgreementRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="SetCustomerBillingAgreementRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:SetCustomerBillingAgreementRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="SetCustomerBillingAgreementResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Token" type="ebl:ExpressCheckoutTokenType">
								<annotation>
									<documentation>
									</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:element name="GetBillingAgreementCustomerDetailsRequest" type="ns:GetBillingAgreementCustomerDetailsRequestType"/>
			<xs:element name="GetBillingAgreementCustomerDetailsResponse" type="ns:GetBillingAgreementCustomerDetailsResponseType"/>
			<xs:element name="GetBillingAgreementCustomerDetailsReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:GetBillingAgreementCustomerDetailsRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="GetBillingAgreementCustomerDetailsRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Token" type="ebl:ExpressCheckoutTokenType">
								<annotation>
									<documentation>
									</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="GetBillingAgreementCustomerDetailsResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:GetBillingAgreementCustomerDetailsResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="CreateBillingAgreementRequest" type="ns:CreateBillingAgreementRequestType"/>
			<xs:element name="CreateBillingAgreementResponse" type="ns:CreateBillingAgreementResponseType"/>
			<xs:element name="CreateBillingAgreementReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:CreateBillingAgreementRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="CreateBillingAgreementRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Token" type="ebl:ExpressCheckoutTokenType">
								<annotation>
									<documentation>
									</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="CreateBillingAgreementResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="BillingAgreementID" type="xs:string">
								<annotation>
									<documentation>
									</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:element name="DoReferenceTransactionRequest" type="ns:DoReferenceTransactionRequestType"/>
			<xs:element name="DoReferenceTransactionResponse" type="ns:DoReferenceTransactionResponseType"/>
			<xs:element name="DoReferenceTransactionReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:DoReferenceTransactionRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="DoReferenceTransactionRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:DoReferenceTransactionRequestDetails"/>
							<xs:element maxOccurs="1" minOccurs="0" name="ReturnFMFDetails" type="xs:int">
								<annotation>
									<documentation>This flag indicates that the response should include FMFDetails</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="DoReferenceTransactionResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:DoReferenceTransactionResponseDetails"/>
							<xs:element maxOccurs="1" minOccurs="0" name="FMFDetails" type="ebl:FMFDetailsType"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			
			<xs:element name="DoNonReferencedCreditRequest" type="ns:DoNonReferencedCreditRequestType"/>
			<xs:element name="DoNonReferencedCreditResponse" type="ns:DoNonReferencedCreditResponseType"/>
			<xs:element name="DoNonReferencedCreditReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:DoNonReferencedCreditRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="DoNonReferencedCreditRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:DoNonReferencedCreditRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="DoNonReferencedCreditResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:DoNonReferencedCreditResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			

			<xs:element name="CreateRecurringPaymentsProfileRequest" type="ns:CreateRecurringPaymentsProfileRequestType"/>
			<xs:element name="CreateRecurringPaymentsProfileResponse" type="ns:CreateRecurringPaymentsProfileResponseType"/>
			<xs:element name="CreateRecurringPaymentsProfileReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:CreateRecurringPaymentsProfileRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:complexType name="CreateRecurringPaymentsProfileRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element ref="ebl:CreateRecurringPaymentsProfileRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:complexType name="CreateRecurringPaymentsProfileResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element ref="ebl:CreateRecurringPaymentsProfileResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:element name="GetRecurringPaymentsProfileDetailsRequest" type="ns:GetRecurringPaymentsProfileDetailsRequestType"/>
			<xs:element name="GetRecurringPaymentsProfileDetailsResponse" type="ns:GetRecurringPaymentsProfileDetailsResponseType"/>
			<xs:element name="GetRecurringPaymentsProfileDetailsReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:GetRecurringPaymentsProfileDetailsRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="GetRecurringPaymentsProfileDetailsRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="ProfileID" type="xs:string">
								<annotation>
									<documentation>
									</documentation>
								</annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="GetRecurringPaymentsProfileDetailsResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element ref="ebl:GetRecurringPaymentsProfileDetailsResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:element name="ManageRecurringPaymentsProfileStatusRequest" type="ns:ManageRecurringPaymentsProfileStatusRequestType"/>
			<xs:element name="ManageRecurringPaymentsProfileStatusResponse" type="ns:ManageRecurringPaymentsProfileStatusResponseType"/>
			<xs:element name="ManageRecurringPaymentsProfileStatusReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:ManageRecurringPaymentsProfileStatusRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="ManageRecurringPaymentsProfileStatusRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element ref="ebl:ManageRecurringPaymentsProfileStatusRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="ManageRecurringPaymentsProfileStatusResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element ref="ebl:ManageRecurringPaymentsProfileStatusResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:element name="BillOutstandingAmountRequest" type="ns:BillOutstandingAmountRequestType"/>
			<xs:element name="BillOutstandingAmountResponse" type="ns:BillOutstandingAmountResponseType"/>
			<xs:element name="BillOutstandingAmountReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:BillOutstandingAmountRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="BillOutstandingAmountRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element ref="ebl:BillOutstandingAmountRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="BillOutstandingAmountResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element ref="ebl:BillOutstandingAmountResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:element name="UpdateRecurringPaymentsProfileRequest" type="ns:UpdateRecurringPaymentsProfileRequestType"/>
			<xs:element name="UpdateRecurringPaymentsProfileResponse" type="ns:UpdateRecurringPaymentsProfileResponseType"/>
			<xs:element name="UpdateRecurringPaymentsProfileReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:UpdateRecurringPaymentsProfileRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="UpdateRecurringPaymentsProfileRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element ref="ebl:UpdateRecurringPaymentsProfileRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="UpdateRecurringPaymentsProfileResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element ref="ebl:UpdateRecurringPaymentsProfileResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="GetPalDetailsRequest" type="ns:GetPalDetailsRequestType"/>
			<xs:element name="GetPalDetailsResponse" type="ns:GetPalDetailsResponseType"/>
			<xs:element name="GetPalDetailsReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:GetPalDetailsRequest"/>
					</xs:sequence>
			</xs:complexType>
			</xs:element>
			<xs:complexType name="GetPalDetailsRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">                              
						<xs:sequence>
						</xs:sequence>
					</xs:extension>
			</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="GetPalDetailsResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="Pal" type="xs:string"/>
							<xs:element maxOccurs="1" minOccurs="1" name="Locale" type="xs:string"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:element name="ReverseTransactionRequest" type="ns:ReverseTransactionRequestType"/>
			<xs:element name="ReverseTransactionResponse" type="ns:ReverseTransactionResponseType"/>
			<xs:element name="ReverseTransactionReq">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ns:ReverseTransactionRequest"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:complexType name="ReverseTransactionRequestType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractRequestType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:ReverseTransactionRequestDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:complexType name="ReverseTransactionResponseType">
				<xs:complexContent>
					<xs:extension base="ebl:AbstractResponseType">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" ref="ebl:ReverseTransactionResponseDetails"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
		</schema>
  </types>
  <message name="SetMobileCheckoutResponse">
    <part name="SetMobileCheckoutResponse" element="ns:SetMobileCheckoutResponse">
    </part>
  </message>
  <message name="BAUpdateResponse">
    <part name="body" element="ns:BAUpdateResponse">
    </part>
  </message>
  <message name="DoVoidResponse">
    <part name="DoVoidResponse" element="ns:DoVoidResponse">
    </part>
  </message>
  <message name="UpdateRecurringPaymentsProfileRequest">
    <part name="UpdateRecurringPaymentsProfileRequest" element="ns:UpdateRecurringPaymentsProfileReq">
    </part>
  </message>
  <message name="SetMobileCheckoutRequest">
    <part name="SetMobileCheckoutRequest" element="ns:SetMobileCheckoutReq">
    </part>
  </message>
  <message name="GetIncentiveEvaluationRequest">
    <part name="GetIncentiveEvaluationRequest" element="ns:GetIncentiveEvaluationReq">
    </part>
  </message>
  <message name="GetPalDetailsResponse">
    <part name="GetPalDetailsResponse" element="ns:GetPalDetailsResponse">
    </part>
  </message>
  <message name="DoReauthorizationResponse">
    <part name="DoReauthorizationResponse" element="ns:DoReauthorizationResponse">
    </part>
  </message>
  <message name="DoDirectPaymentResponse">
    <part name="DoDirectPaymentResponse" element="ns:DoDirectPaymentResponse">
    </part>
  </message>
  <message name="GetIncentiveEvaluationResponse">
    <part name="GetIncentiveEvaluationResponse" element="ns:GetIncentiveEvaluationResponse">
    </part>
  </message>
  <message name="SetAccessPermissionsRequest">
    <part name="SetAccessPermissionsRequest" element="ns:SetAccessPermissionsReq">
    </part>
  </message>
  <message name="MassPayResponse">
    <part name="MassPayResponse" element="ns:MassPayResponse">
    </part>
  </message>
  <message name="CancelRecoupResponse">
    <part name="CancelRecoupResponse" element="ns:CancelRecoupResponse">
    </part>
  </message>
  <message name="DoMobileCheckoutPaymentResponse">
    <part name="DoMobileCheckoutPaymentResponse" element="ns:DoMobileCheckoutPaymentResponse">
    </part>
  </message>
  <message name="BMGetButtonDetailsRequest">
    <part name="BMGetButtonDetailsRequest" element="ns:BMGetButtonDetailsReq">
    </part>
  </message>
  <message name="BMButtonSearchRequest">
    <part name="BMButtonSearchRequest" element="ns:BMButtonSearchReq">
    </part>
  </message>
  <message name="BMUpdateButtonRequest">
    <part name="BMUpdateButtonRequest" element="ns:BMUpdateButtonReq">
    </part>
  </message>
  <message name="GetRecurringPaymentsProfileDetailsResponse">
    <part name="GetRecurringPaymentsProfileDetailsResponse" element="ns:GetRecurringPaymentsProfileDetailsResponse">
    </part>
  </message>
  <message name="CreateBillingAgreementResponse">
    <part name="CreateBillingAgreementResponse" element="ns:CreateBillingAgreementResponse">
    </part>
  </message>
  <message name="AddressVerifyRequest">
    <part name="AddressVerifyRequest" element="ns:AddressVerifyReq">
    </part>
  </message>
  <message name="SetCustomerBillingAgreementRequest">
    <part name="SetCustomerBillingAgreementRequest" element="ns:SetCustomerBillingAgreementReq">
    </part>
  </message>
  <message name="TransactionSearchResponse">
    <part name="TransactionSearchResponse" element="ns:TransactionSearchResponse">
    </part>
  </message>
  <message name="DoUATPAuthorizationResponse">
    <part name="DoUATPAuthorizationResponse" element="ns:DoUATPAuthorizationResponse">
    </part>
  </message>
  <message name="BMSetInventoryResponse">
    <part name="BMSetInventoryResponse" element="ns:BMSetInventoryResponse">
    </part>
  </message>
  <message name="BMManageButtonStatusRequest">
    <part name="BMManageButtonStatusRequest" element="ns:BMManageButtonStatusReq">
    </part>
  </message>
  <message name="DoCaptureResponse">
    <part name="DoCaptureResponse" element="ns:DoCaptureResponse">
    </part>
  </message>
  <message name="ManagePendingTransactionStatusRequest">
    <part name="ManagePendingTransactionStatusRequest" element="ns:ManagePendingTransactionStatusReq">
    </part>
  </message>
  <message name="SetAuthFlowParamResponse">
    <part name="SetAuthFlowParamResponse" element="ns:SetAuthFlowParamResponse">
    </part>
  </message>
  <message name="EnterBoardingResponse">
    <part name="EnterBoardingResponse" element="ns:EnterBoardingResponse">
    </part>
  </message>
  <message name="DoNonReferencedCreditResponse">
    <part name="DoNonReferencedCreditResponse" element="ns:DoNonReferencedCreditResponse">
    </part>
  </message>
  <message name="RequesterCredentials">
    <part name="RequesterCredentials" element="ns:RequesterCredentials">
    </part>
  </message>
  <message name="GetBillingAgreementCustomerDetailsResponse">
    <part name="GetBillingAgreementCustomerDetailsResponse" element="ns:GetBillingAgreementCustomerDetailsResponse">
    </part>
  </message>
  <message name="CreateBillingAgreementRequest">
    <part name="CreateBillingAgreementRequest" element="ns:CreateBillingAgreementReq">
    </part>
  </message>
  <message name="GetBoardingDetailsRequest">
    <part name="GetBoardingDetailsRequest" element="ns:GetBoardingDetailsReq">
    </part>
  </message>
  <message name="ReverseTransactionResponse">
    <part name="ReverseTransactionResponse" element="ns:ReverseTransactionResponse">
    </part>
  </message>
  <message name="DoMobileCheckoutPaymentRequest">
    <part name="DoMobileCheckoutPaymentRequest" element="ns:DoMobileCheckoutPaymentReq">
    </part>
  </message>
  <message name="BMCreateButtonRequest">
    <part name="BMCreateButtonRequest" element="ns:BMCreateButtonReq">
    </part>
  </message>
  <message name="DoReauthorizationRequest">
    <part name="DoReauthorizationRequest" element="ns:DoReauthorizationReq">
    </part>
  </message>
  <message name="DoAuthorizationRequest">
    <part name="DoAuthorizationRequest" element="ns:DoAuthorizationReq">
    </part>
  </message>
  <message name="CreateMobilePaymentRequest">
    <part name="CreateMobilePaymentRequest" element="ns:CreateMobilePaymentReq">
    </part>
  </message>
  <message name="GetBalanceResponse">
    <part name="GetBalanceResponse" element="ns:GetBalanceResponse">
    </part>
  </message>
  <message name="DoReferenceTransactionResponse">
    <part name="DoReferenceTransactionResponse" element="ns:DoReferenceTransactionResponse">
    </part>
  </message>
  <message name="DoDirectPaymentRequest">
    <part name="DoDirectPaymentRequest" element="ns:DoDirectPaymentReq">
    </part>
  </message>
  <message name="DoExpressCheckoutPaymentResponse">
    <part name="DoExpressCheckoutPaymentResponse" element="ns:DoExpressCheckoutPaymentResponse">
    </part>
  </message>
  <message name="InitiateRecoupRequest">
    <part name="InitiateRecoupRequest" element="ns:InitiateRecoupReq">
    </part>
  </message>
  <message name="ReverseTransactionRequest">
    <part name="ReverseTransactionRequest" element="ns:ReverseTransactionReq">
    </part>
  </message>
  <message name="ManageRecurringPaymentsProfileStatusResponse">
    <part name="ManageRecurringPaymentsProfileStatusResponse" element="ns:ManageRecurringPaymentsProfileStatusResponse">
    </part>
  </message>
  <message name="DoExpressCheckoutPaymentRequest">
    <part name="DoExpressCheckoutPaymentRequest" element="ns:DoExpressCheckoutPaymentReq">
    </part>
  </message>
  <message name="InitiateRecoupResponse">
    <part name="InitiateRecoupResponse" element="ns:InitiateRecoupResponse">
    </part>
  </message>
  <message name="BMSetInventoryRequest">
    <part name="BMSetInventoryRequest" element="ns:BMSetInventoryReq">
    </part>
  </message>
  <message name="AddressVerifyResponse">
    <part name="AddressVerifyResponse" element="ns:AddressVerifyResponse">
    </part>
  </message>
  <message name="GetExpressCheckoutDetailsRequest">
    <part name="GetExpressCheckoutDetailsRequest" element="ns:GetExpressCheckoutDetailsReq">
    </part>
  </message>
  <message name="GetExpressCheckoutDetailsResponse">
    <part name="GetExpressCheckoutDetailsResponse" element="ns:GetExpressCheckoutDetailsResponse">
    </part>
  </message>
  <message name="GetRecurringPaymentsProfileDetailsRequest">
    <part name="GetRecurringPaymentsProfileDetailsRequest" element="ns:GetRecurringPaymentsProfileDetailsReq">
    </part>
  </message>
  <message name="BMButtonSearchResponse">
    <part name="BMButtonSearchResponse" element="ns:BMButtonSearchResponse">
    </part>
  </message>
  <message name="BMGetButtonDetailsResponse">
    <part name="BMGetButtonDetailsResponse" element="ns:BMGetButtonDetailsResponse">
    </part>
  </message>
  <message name="GetAuthDetailsResponse">
    <part name="GetAuthDetailsResponse" element="ns:GetAuthDetailsResponse">
    </part>
  </message>
  <message name="DoUATPExpressCheckoutPaymentResponse">
    <part name="DoUATPExpressCheckoutPaymentResponse" element="ns:DoUATPExpressCheckoutPaymentResponse">
    </part>
  </message>
  <message name="EnterBoardingRequest">
    <part name="EnterBoardingRequest" element="ns:EnterBoardingReq">
    </part>
  </message>
  <message name="DoNonReferencedCreditRequest">
    <part name="DoNonReferencedCreditRequest" element="ns:DoNonReferencedCreditReq">
    </part>
  </message>
  <message name="ManageRecurringPaymentsProfileStatusRequest">
    <part name="ManageRecurringPaymentsProfileStatusRequest" element="ns:ManageRecurringPaymentsProfileStatusReq">
    </part>
  </message>
  <message name="GetPalDetailsRequest">
    <part name="GetPalDetailsRequest" element="ns:GetPalDetailsReq">
    </part>
  </message>
  <message name="DoReferenceTransactionRequest">
    <part name="DoReferenceTransactionRequest" element="ns:DoReferenceTransactionReq">
    </part>
  </message>
  <message name="GetTransactionDetailsRequest">
    <part name="GetTransactionDetailsRequest" element="ns:GetTransactionDetailsReq">
    </part>
  </message>
  <message name="BMManageButtonStatusResponse">
    <part name="BMManageButtonStatusResponse" element="ns:BMManageButtonStatusResponse">
    </part>
  </message>
  <message name="CompleteRecoupResponse">
    <part name="CompleteRecoupResponse" element="ns:CompleteRecoupResponse">
    </part>
  </message>
  <message name="GetMobileStatusResponse">
    <part name="GetMobileStatusResponse" element="ns:GetMobileStatusResponse">
    </part>
  </message>
  <message name="GetBalanceRequest">
    <part name="GetBalanceRequest" element="ns:GetBalanceReq">
    </part>
  </message>
  <message name="DoAuthorizationResponse">
    <part name="DoAuthorizationResponse" element="ns:DoAuthorizationResponse">
    </part>
  </message>
  <message name="BillOutstandingAmountRequest">
    <part name="BillOutstandingAmountRequest" element="ns:BillOutstandingAmountReq">
    </part>
  </message>
  <message name="MassPayRequest">
    <part name="MassPayRequest" element="ns:MassPayReq">
    </part>
  </message>
  <message name="CancelRecoupRequest">
    <part name="CancelRecoupRequest" element="ns:CancelRecoupReq">
    </part>
  </message>
  <message name="UpdateAccessPermissionsRequest">
    <part name="UpdateAccessPermissionsRequest" element="ns:UpdateAccessPermissionsReq">
    </part>
  </message>
  <message name="UpdateAccessPermissionsResponse">
    <part name="UpdateAccessPermissionsResponse" element="ns:UpdateAccessPermissionsResponse">
    </part>
  </message>
  <message name="BillUserResponse">
    <part name="BillUserResponse" element="ns:BillUserResponse">
    </part>
  </message>
  <message name="BMGetInventoryResponse">
    <part name="BMGetInventoryResponse" element="ns:BMGetInventoryResponse">
    </part>
  </message>
  <message name="GetBillingAgreementCustomerDetailsRequest">
    <part name="GetBillingAgreementCustomerDetailsRequest" element="ns:GetBillingAgreementCustomerDetailsReq">
    </part>
  </message>
  <message name="GetAccessPermissionDetailsRequest">
    <part name="GetAccessPermissionDetailsRequest" element="ns:GetAccessPermissionDetailsReq">
    </part>
  </message>
  <message name="DoCaptureRequest">
    <part name="DoCaptureRequest" element="ns:DoCaptureReq">
    </part>
  </message>
  <message name="GetAuthDetailsRequest">
    <part name="GetAuthDetailsRequest" element="ns:GetAuthDetailsReq">
    </part>
  </message>
  <message name="UpdateRecurringPaymentsProfileResponse">
    <part name="UpdateRecurringPaymentsProfileResponse" element="ns:UpdateRecurringPaymentsProfileResponse">
    </part>
  </message>
  <message name="RefundTransactionRequest">
    <part name="RefundTransactionRequest" element="ns:RefundTransactionReq">
    </part>
  </message>
  <message name="BillOutstandingAmountResponse">
    <part name="BillOutstandingAmountResponse" element="ns:BillOutstandingAmountResponse">
    </part>
  </message>
  <message name="RefundTransactionResponse">
    <part name="RefundTransactionResponse" element="ns:RefundTransactionResponse">
    </part>
  </message>
  <message name="BMCreateButtonResponse">
    <part name="BMCreateButtonResponse" element="ns:BMCreateButtonResponse">
    </part>
  </message>
  <message name="ManagePendingTransactionStatusResponse">
    <part name="ManagePendingTransactionStatusResponse" element="ns:ManagePendingTransactionStatusResponse">
    </part>
  </message>
  <message name="BillUserRequest">
    <part name="BillUserRequest" element="ns:BillUserReq">
    </part>
  </message>
  <message name="CompleteRecoupRequest">
    <part name="CompleteRecoupRequest" element="ns:CompleteRecoupReq">
    </part>
  </message>
  <message name="SetCustomerBillingAgreementResponse">
    <part name="SetCustomerBillingAgreementResponse" element="ns:SetCustomerBillingAgreementResponse">
    </part>
  </message>
  <message name="SetExpressCheckoutResponse">
    <part name="SetExpressCheckoutResponse" element="ns:SetExpressCheckoutResponse">
    </part>
  </message>
  <message name="TransactionSearchRequest">
    <part name="TransactionSearchRequest" element="ns:TransactionSearchReq">
    </part>
  </message>
  <message name="DoUATPAuthorizationRequest">
    <part name="DoUATPAuthorizationRequest" element="ns:DoUATPAuthorizationReq">
    </part>
  </message>
  <message name="CreateMobilePaymentResponse">
    <part name="CreateMobilePaymentResponse" element="ns:CreateMobilePaymentResponse">
    </part>
  </message>
  <message name="DoUATPExpressCheckoutPaymentRequest">
    <part name="DoUATPExpressCheckoutPaymentRequest" element="ns:DoUATPExpressCheckoutPaymentReq">
    </part>
  </message>
  <message name="BillAgreementUpdateRequest">
    <part name="BillAgreementUpdateRequest" element="ns:BillAgreementUpdateReq">
    </part>
  </message>
  <message name="BMUpdateButtonResponse">
    <part name="BMUpdateButtonResponse" element="ns:BMUpdateButtonResponse">
    </part>
  </message>
  <message name="GetMobileStatusRequest">
    <part name="GetMobileStatusRequest" element="ns:GetMobileStatusReq">
    </part>
  </message>
  <message name="GetTransactionDetailsResponse">
    <part name="GetTransactionDetailsResponse" element="ns:GetTransactionDetailsResponse">
    </part>
  </message>
  <message name="SetExpressCheckoutRequest">
    <part name="SetExpressCheckoutRequest" element="ns:SetExpressCheckoutReq">
    </part>
  </message>
  <message name="SetAuthFlowParamRequest">
    <part name="SetAuthFlowParamRequest" element="ns:SetAuthFlowParamReq">
    </part>
  </message>
  <message name="GetAccessPermissionDetailsResponse">
    <part name="GetAccessPermissionDetailsResponse" element="ns:GetAccessPermissionDetailsResponse">
    </part>
  </message>
  <message name="SetAccessPermissionsResponse">
    <part name="SetAccessPermissionsResponse" element="ns:SetAccessPermissionsResponse">
    </part>
  </message>
  <message name="BMGetInventoryRequest">
    <part name="BMGetInventoryRequest" element="ns:BMGetInventoryReq">
    </part>
  </message>
  <message name="CreateRecurringPaymentsProfileResponse">
    <part name="CreateRecurringPaymentsProfileResponse" element="ns:CreateRecurringPaymentsProfileResponse">
    </part>
  </message>
  <message name="GetBoardingDetailsResponse">
    <part name="GetBoardingDetailsResponse" element="ns:GetBoardingDetailsResponse">
    </part>
  </message>
  <message name="DoVoidRequest">
    <part name="DoVoidRequest" element="ns:DoVoidReq">
    </part>
  </message>
  <message name="CreateRecurringPaymentsProfileRequest">
    <part name="CreateRecurringPaymentsProfileRequest" element="ns:CreateRecurringPaymentsProfileReq">
    </part>
  </message>
  <portType name="PayPalAPIAAInterface">
    <operation name="DoExpressCheckoutPayment">
      <input message="ns:DoExpressCheckoutPaymentRequest">
    </input>
      <output message="ns:DoExpressCheckoutPaymentResponse">
    </output>
    </operation>
    <operation name="DoUATPExpressCheckoutPayment">
      <input message="ns:DoUATPExpressCheckoutPaymentRequest">
    </input>
      <output message="ns:DoUATPExpressCheckoutPaymentResponse">
    </output>
    </operation>
    <operation name="SetAuthFlowParam">
      <input message="ns:SetAuthFlowParamRequest">
    </input>
      <output message="ns:SetAuthFlowParamResponse">
    </output>
    </operation>
    <operation name="GetAuthDetails">
      <input message="ns:GetAuthDetailsRequest">
    </input>
      <output message="ns:GetAuthDetailsResponse">
    </output>
    </operation>
    <operation name="SetAccessPermissions">
      <input message="ns:SetAccessPermissionsRequest">
    </input>
      <output message="ns:SetAccessPermissionsResponse">
    </output>
    </operation>
    <operation name="UpdateAccessPermissions">
      <input message="ns:UpdateAccessPermissionsRequest">
    </input>
      <output message="ns:UpdateAccessPermissionsResponse">
    </output>
    </operation>
    <operation name="GetAccessPermissionDetails">
      <input message="ns:GetAccessPermissionDetailsRequest">
    </input>
      <output message="ns:GetAccessPermissionDetailsResponse">
    </output>
    </operation>
    <operation name="GetIncentiveEvaluation">
      <input message="ns:GetIncentiveEvaluationRequest">
    </input>
      <output message="ns:GetIncentiveEvaluationResponse">
    </output>
    </operation>
    <operation name="SetExpressCheckout">
      <input message="ns:SetExpressCheckoutRequest">
    </input>
      <output message="ns:SetExpressCheckoutResponse">
    </output>
    </operation>
    <operation name="GetExpressCheckoutDetails">
      <input message="ns:GetExpressCheckoutDetailsRequest">
    </input>
      <output message="ns:GetExpressCheckoutDetailsResponse">
    </output>
    </operation>
    <operation name="DoDirectPayment">
      <input message="ns:DoDirectPaymentRequest">
    </input>
      <output message="ns:DoDirectPaymentResponse">
    </output>
    </operation>
    <operation name="ManagePendingTransactionStatus">
      <input message="ns:ManagePendingTransactionStatusRequest">
    </input>
      <output message="ns:ManagePendingTransactionStatusResponse">
    </output>
    </operation>
    <operation name="DoCapture">
      <input message="ns:DoCaptureRequest">
    </input>
      <output message="ns:DoCaptureResponse">
    </output>
    </operation>
    <operation name="DoReauthorization">
      <input message="ns:DoReauthorizationRequest">
    </input>
      <output message="ns:DoReauthorizationResponse">
    </output>
    </operation>
    <operation name="DoVoid">
      <input message="ns:DoVoidRequest">
    </input>
      <output message="ns:DoVoidResponse">
    </output>
    </operation>
    <operation name="DoAuthorization">
      <input message="ns:DoAuthorizationRequest">
    </input>
      <output message="ns:DoAuthorizationResponse">
    </output>
    </operation>
    <operation name="SetCustomerBillingAgreement">
      <input message="ns:SetCustomerBillingAgreementRequest">
    </input>
      <output message="ns:SetCustomerBillingAgreementResponse">
    </output>
    </operation>
    <operation name="GetBillingAgreementCustomerDetails">
      <input message="ns:GetBillingAgreementCustomerDetailsRequest">
    </input>
      <output message="ns:GetBillingAgreementCustomerDetailsResponse">
    </output>
    </operation>
    <operation name="CreateBillingAgreement">
      <input message="ns:CreateBillingAgreementRequest">
    </input>
      <output message="ns:CreateBillingAgreementResponse">
    </output>
    </operation>
    <operation name="DoReferenceTransaction">
      <input message="ns:DoReferenceTransactionRequest">
    </input>
      <output message="ns:DoReferenceTransactionResponse">
    </output>
    </operation>
    <operation name="DoNonReferencedCredit">
      <input message="ns:DoNonReferencedCreditRequest">
    </input>
      <output message="ns:DoNonReferencedCreditResponse">
    </output>
    </operation>
    <operation name="DoUATPAuthorization">
      <input message="ns:DoUATPAuthorizationRequest">
    </input>
      <output message="ns:DoUATPAuthorizationResponse">
    </output>
    </operation>
    <operation name="CreateRecurringPaymentsProfile">
      <input message="ns:CreateRecurringPaymentsProfileRequest">
    </input>
      <output message="ns:CreateRecurringPaymentsProfileResponse">
    </output>
    </operation>
    <operation name="GetRecurringPaymentsProfileDetails">
      <input message="ns:GetRecurringPaymentsProfileDetailsRequest">
    </input>
      <output message="ns:GetRecurringPaymentsProfileDetailsResponse">
    </output>
    </operation>
    <operation name="ManageRecurringPaymentsProfileStatus">
      <input message="ns:ManageRecurringPaymentsProfileStatusRequest">
    </input>
      <output message="ns:ManageRecurringPaymentsProfileStatusResponse">
    </output>
    </operation>
    <operation name="BillOutstandingAmount">
      <input message="ns:BillOutstandingAmountRequest">
    </input>
      <output message="ns:BillOutstandingAmountResponse">
    </output>
    </operation>
    <operation name="UpdateRecurringPaymentsProfile">
      <input message="ns:UpdateRecurringPaymentsProfileRequest">
    </input>
      <output message="ns:UpdateRecurringPaymentsProfileResponse">
    </output>
    </operation>
    <operation name="ReverseTransaction">
      <input message="ns:ReverseTransactionRequest">
    </input>
      <output message="ns:ReverseTransactionResponse">
    </output>
    </operation>
  </portType>
  <portType name="PayPalAPIInterface">
    <operation name="RefundTransaction">
      <input message="ns:RefundTransactionRequest">
    </input>
      <output message="ns:RefundTransactionResponse">
    </output>
    </operation>
    <operation name="InitiateRecoup">
      <input message="ns:InitiateRecoupRequest">
    </input>
      <output message="ns:InitiateRecoupResponse">
    </output>
    </operation>
    <operation name="CompleteRecoup">
      <input message="ns:CompleteRecoupRequest">
    </input>
      <output message="ns:CompleteRecoupResponse">
    </output>
    </operation>
    <operation name="CancelRecoup">
      <input message="ns:CancelRecoupRequest">
    </input>
      <output message="ns:CancelRecoupResponse">
    </output>
    </operation>
    <operation name="GetTransactionDetails">
      <input message="ns:GetTransactionDetailsRequest">
    </input>
      <output message="ns:GetTransactionDetailsResponse">
    </output>
    </operation>
    <operation name="BMCreateButton">
      <input message="ns:BMCreateButtonRequest">
    </input>
      <output message="ns:BMCreateButtonResponse">
    </output>
    </operation>
    <operation name="BMUpdateButton">
      <input message="ns:BMUpdateButtonRequest">
    </input>
      <output message="ns:BMUpdateButtonResponse">
    </output>
    </operation>
    <operation name="BMManageButtonStatus">
      <input message="ns:BMManageButtonStatusRequest">
    </input>
      <output message="ns:BMManageButtonStatusResponse">
    </output>
    </operation>
    <operation name="BMGetButtonDetails">
      <input message="ns:BMGetButtonDetailsRequest">
    </input>
      <output message="ns:BMGetButtonDetailsResponse">
    </output>
    </operation>
    <operation name="BMSetInventory">
      <input message="ns:BMSetInventoryRequest">
    </input>
      <output message="ns:BMSetInventoryResponse">
    </output>
    </operation>
    <operation name="BMGetInventory">
      <input message="ns:BMGetInventoryRequest">
    </input>
      <output message="ns:BMGetInventoryResponse">
    </output>
    </operation>
    <operation name="BMButtonSearch">
      <input message="ns:BMButtonSearchRequest">
    </input>
      <output message="ns:BMButtonSearchResponse">
    </output>
    </operation>
    <operation name="BillUser">
      <input message="ns:BillUserRequest">
    </input>
      <output message="ns:BillUserResponse">
    </output>
    </operation>
    <operation name="TransactionSearch">
      <input message="ns:TransactionSearchRequest">
    </input>
      <output message="ns:TransactionSearchResponse">
    </output>
    </operation>
    <operation name="MassPay">
      <input message="ns:MassPayRequest">
    </input>
      <output message="ns:MassPayResponse">
    </output>
    </operation>
    <operation name="BillAgreementUpdate">
      <input message="ns:BillAgreementUpdateRequest">
    </input>
      <output message="ns:BAUpdateResponse">
    </output>
    </operation>
    <operation name="AddressVerify">
      <input message="ns:AddressVerifyRequest">
    </input>
      <output message="ns:AddressVerifyResponse">
    </output>
    </operation>
    <operation name="EnterBoarding">
      <input message="ns:EnterBoardingRequest">
    </input>
      <output message="ns:EnterBoardingResponse">
    </output>
    </operation>
    <operation name="GetBoardingDetails">
      <input message="ns:GetBoardingDetailsRequest">
    </input>
      <output message="ns:GetBoardingDetailsResponse">
    </output>
    </operation>
    <operation name="CreateMobilePayment">
      <input message="ns:CreateMobilePaymentRequest">
    </input>
      <output message="ns:CreateMobilePaymentResponse">
    </output>
    </operation>
    <operation name="GetMobileStatus">
      <input message="ns:GetMobileStatusRequest">
    </input>
      <output message="ns:GetMobileStatusResponse">
    </output>
    </operation>
    <operation name="SetMobileCheckout">
      <input message="ns:SetMobileCheckoutRequest">
    </input>
      <output message="ns:SetMobileCheckoutResponse">
    </output>
    </operation>
    <operation name="DoMobileCheckoutPayment">
      <input message="ns:DoMobileCheckoutPaymentRequest">
    </input>
      <output message="ns:DoMobileCheckoutPaymentResponse">
    </output>
    </operation>
    <operation name="GetBalance">
      <input message="ns:GetBalanceRequest">
    </input>
      <output message="ns:GetBalanceResponse">
    </output>
    </operation>
    <operation name="GetPalDetails">
      <input message="ns:GetPalDetailsRequest">
    </input>
      <output message="ns:GetPalDetailsResponse">
    </output>
    </operation>
  </portType>
  <binding name="PayPalAPIAASoapBinding" type="ns:PayPalAPIAAInterface">
    <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="DoExpressCheckoutPayment">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="DoUATPExpressCheckoutPayment">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetAuthFlowParam">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetAuthDetails">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetAccessPermissions">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="UpdateAccessPermissions">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetAccessPermissionDetails">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetIncentiveEvaluation">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetExpressCheckout">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetExpressCheckoutDetails">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="DoDirectPayment">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="ManagePendingTransactionStatus">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="DoCapture">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="DoReauthorization">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="DoVoid">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="DoAuthorization">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="DoUATPAuthorization">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetCustomerBillingAgreement">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetBillingAgreementCustomerDetails">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="CreateBillingAgreement">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="DoReferenceTransaction">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="CreateRecurringPaymentsProfile">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetRecurringPaymentsProfileDetails">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="ManageRecurringPaymentsProfileStatus">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="BillOutstandingAmount">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="UpdateRecurringPaymentsProfile">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="DoNonReferencedCredit">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="ReverseTransaction">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <binding name="PayPalAPISoapBinding" type="ns:PayPalAPIInterface">
    <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="RefundTransaction">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="InitiateRecoup">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="CompleteRecoup">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="CancelRecoup">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetTransactionDetails">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="BMCreateButton">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="BMUpdateButton">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="BMSetInventory">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="BMGetButtonDetails">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="BMGetInventory">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="BMManageButtonStatus">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="BMButtonSearch">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="BillUser">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="TransactionSearch">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="MassPay">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="BillAgreementUpdate">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="AddressVerify">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="EnterBoarding">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetBoardingDetails">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="CreateMobilePayment">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetMobileStatus">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetMobileCheckout">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="DoMobileCheckoutPayment">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetBalance">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetPalDetails">
      <wsdlsoap:operation soapAction=""/>
      <input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </input>
      <output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal">
        </wsdlsoap:header>
        <wsdlsoap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="PayPalAPIInterfaceService">
    <port name="PayPalAPIAA" binding="ns:PayPalAPIAASoapBinding">
      <wsdlsoap:address location="https://api-aa.sandbox.paypal.com/2.0/"/>
    </port>
    <port name="PayPalAPI" binding="ns:PayPalAPISoapBinding">
      <wsdlsoap:address location="https://api.sandbox.paypal.com/2.0/"/>
    </port>
  </service>
</definitions>
